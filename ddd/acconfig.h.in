// $Id$ -*- C++ -*-
// General configuration file.

// Copyright (C) 1995-1998 Technische Universitaet Braunschweig, Germany.
// Written by Andreas Zeller <zeller@ips.cs.tu-bs.de>.
// 
// This file is part of the ICE Library.
// 
// The ICE Library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
// 
// The ICE Library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU Library General Public License for more details.
// 
// You should have received a copy of the GNU Library General Public
// License along with the ICE Library -- see the file COPYING.LIB.
// If not, write to the Free Software Foundation, Inc.,
// 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
// 
// ICE is the incremental configuration environment.
// For details, see the ICE World-Wide-Web page, 
// `http://www.cs.tu-bs.de/softech/ice/',
// or send a mail to the ICE developers <ice@ips.cs.tu-bs.de>.

#ifndef _ICE_config_h
#define _ICE_config_h
// @TOP@

// Descriptive text for C preprocessor macros that autoconf may define.
// Leave the following blank line there!!  Autoheader needs it.


/* The package name. */
#undef PACKAGE

/* Define if your C++ compiler has ANSI-compliant lifetime of temporaries. */
#undef HAVE_ANSI_LIFETIME_OF_TEMPORARIES

/* Define if your C++ compiler supports explicit template instantiation. */
#undef HAVE_EXPLICIT_TEMPLATE_INSTANTIATION

/* Define if your C++ compiler supports overloaded operator new[]. */
#undef HAVE_ARRAY_OPERATOR_NEW

/* Define if you have the X Athena widgets. */
#undef HAVE_ATHENA

/* Define if your C++ compiler supports `bool' types. */
#undef HAVE_BOOL

/* Define if your C++ compiler supports the `mutable' keyword. */
#undef HAVE_MUTABLE

/* Define if your C++ compiler supports the `explicit' keyword. */
#undef HAVE_EXPLICIT

/* Define if your C++ compiler supports exception handling. */
#undef HAVE_EXCEPTIONS

/* Define if your C++ compiler supports ISO C++ standard exceptions. */
#undef HAVE_STD_EXCEPTIONS

/* Define if your C++ compiler supports namespaces. */
#undef HAVE_NAMESPACE

/* Define if your C++ compiler supports run-time type information. */
#undef HAVE_TYPEINFO

/* Define if <sys/core.h> defines CORE_MAGIC to identify core files. */
#undef HAVE_CORE_MAGIC

/* Define if ptrace() supports a PTRACE_DUMPCORE request to dump core files. */
#undef HAVE_PTRACE_DUMPCORE

/* Define if your C++ library has an ostrstream::frozen() function. */
#undef HAVE_FROZEN_OSTRSTREAM

/* Define if your C++ compiler supports `long long' types. */
#undef HAVE_LONG_LONG

/* Define if MAXPATHLEN is defined or declared in <sys/param.h>. */
#undef HAVE_MAXPATHLEN

/* Define if you have the XP library (X11R6.3 print server).
   Required by Motif 2.1 and later. */
#undef HAVE_XP

/* Define if you have the XPM library. */
#undef HAVE_XPM

/* Define if you have Motif widgets. */
#undef HAVE_MOTIF

/* Define if your Motif widgets are actually LessTif widgets. */
#undef HAVE_LESSTIF

/* Define if the Motif library defines `xmUseVersion' */
#undef HAVE_XMUSEVERSION

/* Define if your C++ compiler supports named return values. */
#undef HAVE_NAMED_RETURN_VALUES

/* Define if PATH_MAX is defined or declared in <limits.h>. */
#undef HAVE_PATH_MAX

/* Define if your C++ compiler supports placement new. */
#undef HAVE_PLACEMENT_NEW

/* Define if _POSIX_PATH_MAX is defined or declared in <limits.h>. */
#undef HAVE_POSIX_PATH_MAX

/* Define if your C++ compiler supports the __PRETTY_FUNCTION__ macro. */
#undef HAVE_PRETTY_FUNCTION

/* Define if the `regex_t' type has a `n_subexps' member, as in GNU RX 1.0 */
#undef HAVE_REGEX_T_N_SUBEXPS

/* Define if the `regex_t' type has a `re_nsub' member, according to POSIX.2 */
#undef HAVE_REGEX_T_RE_NSUB

/* Define if ostrstream::pcount() is increased by 1 after accessing the
   string via ostrstream::str(), as in the SGI C++ I/O library. */
#undef OSTRSTREAM_PCOUNT_BROKEN

/* Define to the signal handler type accepted by signal(). 
   See the `signal' man page and the decl in <signal.h> for the exact type.
   Typically values are `int', `...', and `int ...'. */
#undef SIGHANDLERARGS

/* Define if `regcomp()' from <regex.h> does not work. */
#undef REGCOMP_BROKEN

/* Define if you want this program to use X Athena widgets. */
#undef WITH_ATHENA

/* Define if you want to replace the ICE built-in 'test' command by
   the external `test' program. */
#undef WITH_EXTERNAL_TEST

/* Define if you want this program to use Motif widgets. */
#undef WITH_MOTIF

/* Define if you want support for runtime-compiled regexps.  Required
   in ICE; not needed in DDD.  */
#undef WITH_RUNTIME_REGEX

/* Define if you want regexps to be compiled at runtime.  Default in
   DDD 2.1 and earlier.  Requires ~30% more memory; slightly slower,
   too.  Requires WITH_RUNTIME_REGEX to be set.  Required in ICE.  */
#undef RUNTIME_REGEX

/* Define if you want the manual to be compiled into the executable. */
#undef WITH_BUILTIN_MANUAL

/* Define if you want the app-defaults file to be compiled into the
   executable. */
#undef WITH_BUILTIN_APP_DEFAULTS

/* Define if you want to enable DDD menu entries for debugging itself. */
#undef WITH_DEBUGGING_DDD


// @BOTTOM@

define(`ICE_CHECK_DECL', dnl
`/* Define if $1 is declared in $2. */
undef(translit(HAVE_$1_DECL, `abcdefghijklmnopqrstuvwxyz', dnl
`ABCDEFGHIJKLMNOPQRSTUVWXYZ'))'
)dnl
define(`undef', `#undef $1')dnl
include(ifdef(`srcdir',srcdir()/acspecial.h,acspecial.h))dnl
#endif // _ICE_config_h
// DON'T ADD ANYTHING BEHIND THIS #endif
