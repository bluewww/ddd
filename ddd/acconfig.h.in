// $Id$ -*- C++ -*-
// General configuration file.

// Copyright (C) 1995 Technische Universitaet Braunschweig, Germany.
// Written by Andreas Zeller (zeller@ips.cs.tu-bs.de).
// 
// This file is part of the ICE Library.
// 
// The ICE Library is free software; you can redistribute it and/or
// modify it under the terms of the GNU Library General Public
// License as published by the Free Software Foundation; either
// version 2 of the License, or (at your option) any later version.
// 
// The ICE Library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU Library General Public License for more details.
// 
// You should have received a copy of the GNU Library General Public
// License along with the ICE Library -- see the file COPYING.LIB.
// If not, write to the Free Software Foundation, Inc.,
// 675 Mass Ave, Cambridge, MA 02139, USA.
// 
// ICE is the incremental configuration engine.
// Contact ice@ips.cs.tu-bs.de for details.

// $Log$
// Revision 1.1  1995/05/01 15:47:09  zeller
// Initial revision
//
// Revision 1.1.1.1  1995/02/09  09:12:58  zeller
// ICE 0.5 distribution
//
// Revision 1.7  1995/01/14  14:48:27  zeller
// New license for ICE 0.5
//

#ifndef _ICE_config_h
#define _ICE_config_h
// @TOP@

// Descriptive text for C preprocessor macros that autoconf may define.
// Leave the following blank line there!!  Autoheader needs it.


/* Define if your C++ compiler has ANSI-compliant lifetime of temporaries. */
#undef HAVE_ANSI_LIFETIME_OF_TEMPORARIES

/* Define if your C++ compiler supports overloaded operator new[]. */
#undef HAVE_ARRAY_OPERATOR_NEW

/* Define if you have the X Athena widgets. */
#undef HAVE_ATHENA_WIDGETS

/* Define if your C++ compiler supports `bool' types. */
#undef HAVE_BOOL

/* Define if MAXPATHLEN is defined or declared in <sys/param.h>. */
#undef HAVE_MAXPATHLEN

/* Define if you have Motif widgets. */
#undef HAVE_MOTIF_WIDGETS

/* Define if your C++ compiler supports named return values. */
#undef HAVE_NAMED_RETURN_VALUES

/* Define if PATH_MAX is defined or declared in <limits.h>. */
#undef HAVE_PATH_MAX

/* Define if _POSIX_PATH_MAX is defined or declared in <limits.h>. */
#undef HAVE_POSIX_PATH_MAX

/* Define if your C++ compiler supports the __PRETTY_FUNCTION__ macro. */
#undef HAVE_PRETTY_FUNCTION

/* Define if you want ICE to use X Athena widgets. */
#undef WITH_ATHENA_WIDGETS

/* Define if you want to replace the ICE built-in 'test' command by
   the external `test' program. */
#undef WITH_EXTERNAL_TEST

/* Define if you want ICE to use Motif widgets. */
#undef WITH_MOTIF_WIDGETS


// @BOTTOM@

define(`ICE_CHECK_DECL', dnl
`/* Define if $1 is declared in $2. */
undef(translit(HAVE_$1_DECL, `abcdefghijklmnopqrstuvwxyz', dnl
`ABCDEFGHIJKLMNOPQRSTUVWXYZ'))'
)dnl
define(`undef', `#undef $1')dnl
include(acspecial.h)dnl
#endif // _ICE_config_h
// DON'T ADD ANYTHING BEHIND THIS #endif
