dnl $Id$
dnl Process this file with autoconf to produce a configure script.
dnl
dnl Copyright (C) 1995 Technische Universitaet Braunschweig, Germany.
dnl Written by Andreas Zeller (zeller@ips.cs.tu-bs.de).
dnl 
dnl This file is part of DDD.
dnl 
dnl DDD is free software; you can redistribute it and/or
dnl modify it under the terms of the GNU General Public
dnl License as published by the Free Software Foundation; either
dnl version 2 of the License, or (at your option) any later version.
dnl 
dnl DDD is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
dnl See the GNU General Public License for more details.
dnl 
dnl You should have received a copy of the GNU General Public
dnl License along with DDD -- see the file COPYING.
dnl If not, write to the Free Software Foundation, Inc.,
dnl 675 Mass Ave, Cambridge, MA 02139, USA.
dnl 
dnl DDD is the data display debugger.
dnl Contact ddd@ips.cs.tu-bs.de for details.
dnl
dnl
dnl
dnl
dnl Revision Control
dnl
AC_PREREQ(2.3)
AC_REVISION([$Id$])
dnl
dnl Initialization
dnl
AC_INIT(DispBox.h)
AC_CONFIG_HEADER(config.h)
dnl
dnl
dnl Name and version number
dnl *This* is the place where name and version numbers are defined.
AC_MSG_CHECKING(for name and version number)
dnl
ddd=ddd
Ddd=Ddd
DDD=DDD
VERSION=1.3b
dnl
AC_SUBST(ddd)dnl
AC_SUBST(Ddd)dnl
AC_SUBST(DDD)dnl
AC_SUBST(VERSION)dnl
AC_MSG_RESULT(${DDD} ${VERSION})
dnl
dnl
dnl
dnl
dnl
dnl
dnl Find out what host this is
dnl
AC_CANONICAL_HOST
AC_SUBST(host)
dnl
dnl
dnl Find installation prefix and name.
dnl
AC_PREFIX_PROGRAM(gcc)
AC_ARG_PROGRAM
dnl ICE_PATH_INFO
dnl
dnl
dnl
dnl Check for POSIX stuff (required by AC_FIND_X)
dnl
AC_ISC_POSIX
dnl
dnl
dnl Locate programs
dnl
AC_PROG_LN_S
AC_PATH_PROGS(SH, sh)
AC_CHECK_PROGS(TAR, gtar tar)
AC_CHECK_PROGS(GZIP, gzip compress)
AC_CHECK_PROGS(M4, gm4 m4)
AC_CHECK_PROGS(SED, gsed sed)
AC_CHECK_PROGS(DIFF, gdiff diff)
AC_CHECK_PROGS(DVIPS, dvips dvi2ps)
AC_PATH_PROGS(RSH, remsh rsh on)
AC_CHECK_PROGS(LPR, lp lpr)
if test "$LPR" = "lpr"; then
PRINT_COMMAND="lpr"
elif test "$LPR" = "lp"; then
PRINT_COMMAND="lp -c"
else
PRINT_COMMAND="lp"
fi
AC_SUBST(PRINT_COMMAND)dnl
AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_YACC
AC_MSG_CHECKING(for ${YACC} flags)
YFLAGS=""
AC_MSG_RESULT(${YFLAGS})
AC_SUBST(YFLAGS)dnl
AC_CHECK_LIB(y, main, LIBS="$LIBS -ly")
AC_PROG_LEX
AC_MSG_CHECKING(for ${LEX} flags)
LFLAGS=""
if test "$LEX" = "flex"; then
LFLAGS="-8"
fi
AC_MSG_RESULT(${LFLAGS})
AC_SUBST(LFLAGS)dnl
AC_PROG_AWK
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_CXXCPP
dnl
dnl
dnl Check for compiler characteristics
dnl
dnl ICE_CXX_PROBLEMATIC_VERSION
dnl ICE_CXX_INCLUDE_DIR
dnl ICE_CXX_LIB_DIR
ICE_CXX_OPTIONS
ICE_CXX_BOOL
ICE_CXX_NAMED_RETURN_VALUES
ICE_CXX_PRETTY_FUNCTION
ICE_CXX_ARRAY_OPERATOR_NEW
ICE_CXX_LIFETIME_OF_TEMPORARIES
ICE_PROG_CPP_TRADITIONAL
dnl
dnl
dnl Locate Libraries
dnl
dnl
AC_CHECK_LIB(nsl, gethostbyname, LIBS="${LIBS} -lnsl")
dnl
dnl
dnl Check for X stuff
dnl
dnl
if test "$with_x" != no; then
ice_save_LIBS="$LIBS"
ice_save_CFLAGS="$CFLAGS"
ice_save_CPPFLAGS="$CPPFLAGS"
ice_save_LDFLAGS="$LDFLAGS"
dnl
AC_PATH_XTRA
ICE_FIND_MOTIF
ICE_FIND_ATHENA
dnl
dnl
dnl
LIBS="$LIBS $X_PRE_LIBS $X_EXTRA_LIBS"
CFLAGS="$CFLAGS $X_CFLAGS"
CPPFLAGS="$CPPFLAGS $X_CFLAGS"
LDFLAGS="$LDFLAGS $X_LIBS"
dnl
dnl Check for X library
dnl
X11_LIBS=""
AC_CHECK_LIB(X11, XOpenDisplay, X11_LIBS="-lX11")
AC_SUBST(X_LIBS)
AC_SUBST(X11_LIBS)
AC_SUBST(X_PRE_LIBS)
dnl
dnl
dnl Check for X toolkit libraries
dnl
XT_LIBS=""
AC_CHECK_LIB(Xt, XtInitialize, XT_LIBS="-lXt",,${X11_LIBS})
AC_SUBST(XT_LIBS)
dnl
dnl
dnl Check for X extension libraries
dnl
dnl
XEXT_LIBS=""
AC_CHECK_LIB(Xext, XShapeQueryVersion, XEXT_LIBS="-lXext",,${X11_LIBS})
AC_SUBST(XEXT_LIBS)
dnl
dnl
dnl Check for Athena widget libraries
dnl
dnl
XAW_LIBS=""
AC_CHECK_LIB(Xmu, XmuCvtStringToOrientation, XAW_LIBS="-lXmu ${XAW_LIBS}",,
	${XAW_LIBS} ${XT_LIBS} ${X11_LIBS})
AC_CHECK_LIB(Xaw, XawTextSetInsertionPoint, XAW_LIBS="-lXaw ${XAW_LIBS}"
	AC_DEFINE(HAVE_ATHENA_WIDGETS),,
	${XAW_LIBS} ${XT_LIBS} ${X11_LIBS})
AC_SUBST(XAW_LIBS)
if test "$XAW_LIBS" != ""; then
AC_CHECK_HEADERS(X11/Xaw/Form.h X11/Xaw/Panner.h X11/Xaw/Porthole.h)
AC_CHECK_HEADERS(X11/Xmu/Editres.h)
fi
dnl
dnl
dnl Check for Motif widget libraries
dnl
dnl
XM_LIBS=""
AC_CHECK_LIB(Xm, XmCreateOptionMenu, XM_LIBS="-lXm"
	AC_DEFINE(HAVE_MOTIF_WIDGETS),,
	${XEXT_LIBS} ${XT_LIBS} ${X11_LIBS})
AC_SUBST(XM_LIBS)
dnl
dnl
dnl
dnl
LIBS="$ice_save_LIBS"
CFLAGS="$ice_save_CFLAGS"
CPPFLAGS="$ice_save_CPPFLAGS"
LDFLAGS="$ice_save_CFLAGS"
fi
dnl
dnl
dnl Check for Make characteristics
dnl
AC_PROG_MAKE_SET
dnl
dnl
dnl Find types
dnl 
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_TYPE_UID_T
AC_TYPE_GETGROUPS
AC_TYPE_SIGNAL
dnl
dnl
dnl Find libraries and functions
dnl 
AC_FUNC_VFORK
AC_FUNC_GETPGRP
AC_FUNC_ALLOCA
AC_LANG_SAVE
AC_LANG_CPLUSPLUS
dnl
if test "$CXX" = gcc; then
LIBS="$LIBS -lg++"
fi
AC_HEADER_STDC
AC_CHECK_HEADERS(unistd.h limits.h malloc.h pwd.h stdlib.h termio.h termios.h)
AC_CHECK_HEADERS(sys/ioctl.h sys/param.h sys/time.h sys/resource.h sys/timeb.h)
AC_CHECK_HEADERS(sys/stat.h sys/stropts.h sys/vty.h sys/sysmacros.h sys/core.h)
AC_CHECK_HEADERS(sys/socket.h sys/termios.h sys/utsname.h sys/user.h)
AC_CHECK_HEADERS(fcntl.h string.h strings.h netdb.h)
AC_HEADER_TIME
AC_HEADER_SYS_WAIT
AC_HEADER_DIRENT
AC_STAT_MACROS_BROKEN
dnl
ICE_CHECK_FROZEN_OSTRSTREAM
dnl
ICE_CHECK_DECL(dup2, unistd.h)
ICE_CHECK_DECL(endpwent, pwd.h)
ICE_CHECK_DECL(fcntl, fcntl.h)
ICE_CHECK_DECL(ftime, sys/timeb.h)
ICE_CHECK_DECL(gethostname, unistd.h)
ICE_CHECK_DECL(gethostbyname, netdb.h)
ICE_CHECK_DECL(getrusage, sys/resource.h)
ICE_CHECK_DECL(getwd, unistd.h)
ICE_CHECK_DECL(getpty, unistd.h)
ICE_CHECK_DECL(_getpty, unistd.h)
ICE_CHECK_DECL(grantpt, stdlib.h)
ICE_CHECK_DECL(ioctl, unistd.h)
ICE_CHECK_DECL(lstat, sys/stat.h)
ICE_CHECK_DECL(malloc, stdlib.h)
ICE_CHECK_DECL(memcpy, string.h)
ICE_CHECK_DECL(memset, string.h)
ICE_CHECK_DECL(popen, stdio.h)
ICE_CHECK_DECL(pclose, stdio.h)
ICE_CHECK_DECL(ptsname, stdlib.h)
ICE_CHECK_DECL(rand, stdlib.h)
ICE_CHECK_DECL(random, stdlib.h)
ICE_CHECK_DECL(readlink, unistd.h)
ICE_CHECK_DECL(setbuf, stdio.h)
ICE_CHECK_DECL(setpgrp, unistd.h)
ICE_CHECK_DECL(setpgrp2, unistd.h)
ICE_CHECK_DECL(setpgid, unistd.h)
ICE_CHECK_DECL(setpwent, pwd.h)
ICE_CHECK_DECL(setsid, unistd.h)
ICE_CHECK_DECL(setvbuf, stdio.h)
ICE_CHECK_DECL(sigblock, signal.h)
ICE_CHECK_DECL(sigsetmask, signal.h)
ICE_CHECK_DECL(sigprocmask, signal.h)
ICE_CHECK_DECL(sigsuspend, signal.h)
ICE_CHECK_DECL(srand, stdlib.h)
ICE_CHECK_DECL(srandom, stdlib.h)
ICE_CHECK_DECL(stat, sys/stat.h)
ICE_CHECK_DECL(strerror, string.h)
ICE_CHECK_DECL(strsignal, string.h)
ICE_CHECK_DECL(strtol, stdlib.h)
ICE_CHECK_DECL(strtod, stdlib.h)
ICE_CHECK_DECL(tcgetattr, termios.h)
ICE_CHECK_DECL(tcsetattr, termios.h)
ICE_CHECK_DECL(tcgetsid, sys/termios.h)
ICE_CHECK_DECL(tcgetpgrp, unistd.h)
ICE_CHECK_DECL(tcsetpgrp, unistd.h)
ICE_CHECK_DECL(times, sys/times.h)
ICE_CHECK_DECL(uname, sys/utsname.h)
ICE_CHECK_DECL(unlink, unistd.h)
ICE_CHECK_DECL(unlockpt, stdlib.h)
ICE_CHECK_DECL(vfork, vfork.h unistd.h)
ICE_CHECK_DECL(waitpid, sys/wait.h)
dnl
ICE_CHECK_PATH_MAX
ICE_CHECK_POSIX_PATH_MAX
ICE_CHECK_MAXPATHLEN
AC_LANG_RESTORE
dnl
dnl
dnl That's all, folks
dnl
AC_OUTPUT(Makefile vr.h Ddd ddd.man, date > stamp-h)
