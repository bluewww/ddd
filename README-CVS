# $Id$
# Getting DDD from the public CVS Archive

DDD now has a public CVS archive (hosted at SourceForge) where you can
download arbitrary DDD releases (typically the latest one).  Using
your local CVS version, you can always download the latest changes and
thus stay in sync with DDD development.

To checkout and build DDD from the public CVS archive, follow these steps:

1. Check the DDD repository for latest news.  Go to:

   http://sourceforge.net/projects/ddd/


2. Check your prerequisites. 

   The CVS repository does not contain derived files, only DDD
   sources.  Hence, you need several tools on your local machine for
   building DDD.

   A list of the most important tools can be found in the DDD
   `INSTALL' file, as `tools you need if you make changes to the DDD
   sources'.  All these tools are required.


3. Checkout DDD.  Use these commands:

       $ cvs -d:pserver:anonymous@cvs.ddd.sourceforge.net:/cvsroot/ddd login

   If you are prompted for a password, just hit Enter.

       $ cvs -z3 -d:pserver:anonymous@cvs.ddd.sourceforge.net:/cvsroot/ddd \
         checkout -kkv ddd

   This creates a `ddd/' subdirectory containing all DDD code.

   The `-kkv' option is required to expand RCS keywords, thus allowing
   prompt version identification.  `-z3' enables compression.


4. After successful checkout, have a look at `ddd/README-CVS' for the
   most recent version of this document.


5. Setup configuration files.  Use these commands:

   $ (cd ddd && aclocal)
   $ autoconf -l ddd
   $ automake --gnu --add-missing --copy --verbose
   $ (cd ddd && autoconf && automake --foreign --add-missing --copy --verbose)
   $ (cd vsllib && autoconf -l ../ddd && automake --foreign --verbose)
   $ (cd themes && autoconf -l ../ddd && automake --foreign --verbose)
   $ (cd readline && autoconf)
   $ (cd termcap && autoconf)


6. Configure DDD, as described in the `INSTALL' file.  Example command:

   $ sh ./configure


7. Build libraries.  Use these commands:

   $ (cd libiberty && test -f Makefile && make)
   $ (cd termcap   && test -f Makefile && make)
   $ (cd readline  && test -f Makefile && make)


8. Setup DDD Makefiles.  Use these commands:

   $ cd ddd
   $ make Makefile
   $ make Makefile


9. Create DDD precompiled files (including documentation).  Still in
   the `ddd' directory, use this command:

   $ make diststuff

   If any command is missing, install it and try again.


10. You're done!  You can now re-configure, build, and install DDD as described
   in the `INSTALL' file.  Example commands:

   $ cd ..
   $ make
   $ make check


11. You can always sync with the current development state by using

   $ cvs update
