DDD 3.0 (sparc-sun-solaris2.5.1), Copyright (C) 1998 TU Braunschweig.
Compiled with GCC 2.7.2.1, libstdc++ 2.7.2
Requires X11R5, Xt11R5, Motif 1.2.3 (OSF/Motif Version 1.2.3)
Includes DDD core, manual, app-defaults, XPM 3.4.7, Athena Panner
Built 1998-06-24 by Pierre Pomes <ppomes@logibro.com>.
$  ddd -dbx -geometry 800x700 run.toi
+  /bin/sh -c 'exec dbx '\''run.toi'\'''
#  Hello, world!
#  Starting DBX...
#  Running DBX (pid 14983, tty /dev/pts/14)...
<- "Reading symbolic information for run.toi\n"
   "Reading symbolic information for rtld /usr/lib/ld.so.1\n"
   "Reading symbolic information for /usr/lib/libm.so.1\n"
   "Reading symbolic information for /usr/lib/libsocket.so.1\n"
   "Reading symbolic information for /usr/lib/libnsl.so.1\n"
   "Reading symbolic information for /usr/lib/libc.so.1\n"
   "Reading symbolic information for /usr/lib/libdl.so.1\n"
   "Reading symbolic information for /usr/lib/libintl.so.1\n"
   "Reading symbolic information for /usr/lib/libmp.so.1\n"
   "Reading symbolic information for /usr/lib/libw.so.1\n"
   "(dbx) "
-> "sh stty -echo -onlcr\n"
<- "(dbx) "
-> "set $page = 1\n"
<- "(dbx) "
-> "frame\n"
<- "dbx: program is not active\n"
   "(dbx) "
-> "func\n"
<- "main\n"
   "(dbx) "
-> "dbxenv run_io\n"
<- "dbx: `run_io\' is not a dbxenv variable\n"
   "Use the `help\' command for more information.\n"
   "(dbx) "
-> "print -r 4711\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "4711\n"
   "(dbx) "
-> "where -h\n"
<- "dbx: program is not active\n"
   "(dbx) "
-> "display\n"
<- "(dbx) "
-> "clear\n"
<- "dbx: warning: No executable here to clear events from\n"
   "(dbx) "
-> "help handler\n"
<- "A handler is created for each event that needs to be managed in a debugging\n"
   "session. The commands `trace\', `stop\', and `when\' create handlers. Each\n"
   "of these commands returns a number known as the `handler ID\' (denoted\n"
   "by <hid>). The `handler\', `status\', and `delete\' commands manipulate or\n"
   "give information about handlers in a generic fashion:\n"
   "\n"
   "handler -enable <hid> ...       # enable given handlers, `all\' for all\n"
   "handler -disable <hid> ...      # disable given handlers, `all\' for all\n"
   "handler -count <hid>            # print value of trip counter for given handler\n"
   "handler -count <hid> <newlimit> # set new count limit for given event\n"
   "handler -reset <hid>            # reset trip counter counter for given handler\n"
   "\n"
   "See also `help event\'.\n"
<- "(dbx) "
-> "pwd\n"
<- "/home1/solaris/home/ppomes/ws/8P11/toi\n"
   "(dbx) "
-> "help setenv\n"
<- "setenv <name> <string> # Set environment variable <name> to <string>\n"
<- "(dbx) "
-> "help edit\n"
<- "edit                   # Edit the current file\n"
   "edit <filename>        # Edit the specified file <filename>\n"
   "edit <proc>            # Edit the file containing function or procedure <proc>\n"
   "\n"
   "`edit\' uses $EDITOR if dbx is not running under the debugger.  Otherwise,\n"
   "it sends a message to the debugger to display the appropriate file.  If the\n"
   "debugger was invoked with the `-editor\' option, the external editor which\n"
   "handles source display will be used, otherwise the source pane will be\n"
   "updated to display the requested file.\n"
<- "(dbx) "
-> "help make\n"
<- "make                   # Invoke `make\' for the program being debugged\n"
   "(dbx) "
-> "help regs\n"
<- "regs is unknown\n"
   "(dbx) "
-> "print \"DDD\"\n"
<- "\"DDD\" = \"DDD\"\n"
   "(dbx) "
-> "help when\n"
<- "when at <line> { cmd; }         # Execute command(s) when <line> reached\n"
   "when in <proc> { cmd; }         # Execute command(s) when <proc> called\n"
   "`when\' has a general syntax as follows:\n"
   "        when <event-specification> [ <modifier> ] { <cmd> ... ; }\n"
   "When the specified event occurs, the <cmd>s are executed.\n"
   "For a list and the syntax of all events see `help event specification\'.\n"
   "For a general discussion of event management commands see `help events\'.\n"
   "(dbx) "
-> "delete 4711 4711\n"
<- "dbx: warning: no such handler id 4711\n"
   "dbx: warning: no such handler id 4711\n"
   "(dbx) "
-> "help run\n"
<- "run                    # Begin executing the program with the current arguments\n"
   "run <args>             # Begin executing the program with new arguments\n"
   "                         See also `help rerun\'\n"
   "\n"
<- "(dbx) "
-> "help givenfile\n"
<- "givenfile is unknown\n"
   "(dbx) "
-> "help cont\n"
<- "cont [sig <signo>] [<id>]            # Continue execution with signal <signo>\n"
   "cont at <line> [sig <signo>] <id>    # Continue execution at line <line> with\n"
   "                                       signal <signo>.  See `help continue\' for\n"
   "                                       dbx command language loop control.\n"
   "\n"
   "The <id>, if present, specifies which thread or LWP to continue.\n"
   "Default is `all\'. In the case of \'cont at\' the <id> is required.\n"
<- "(dbx) "
-> "sh pwd\n"
<- "/home1/solaris/home/ppomes/ws/8P11/toi\n"
<- "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
   "(dbx) "
-> "list\n"
<- "   36   \t\t       );\n"
   "   37     \n"
   "   38     if (iRetCode == 0)\n"
   "   39       {\n"
   "   40         toi_main( OptionStatus );\n"
   "   41         toi_stop() ;\n"
   "   42       } /* end if*/\n"
   "   43     \n"
   "   44     return(iRetCode);\n"
   "   45   }\n"
   "(dbx) "
-> "status\n"
<- "(dbx) "
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/run_toi.c"...
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/run_toi.c"...done.
#  File "/home1/solaris/home/ppomes/ws/8P11/toi/src/run_toi.c" 49 lines, 1434 characters
-> "debug \n"
<- "Debugging: run.toi \n"
   "(dbx) "
-> "# reset\n"
<- "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
   "(dbx) "
-> "list\n"
<- "   46   \n"
   "   47   \n"
   "   48   \n"
   "   49   \n"
   "(dbx) "
-> "status\n"
<- "(dbx) "
-> "display\n"
<- "(dbx) "
-> "debug \n"
<- "Debugging: run.toi \n"
   "(dbx) "
-> "help detach\n"
<- "detach                  # Detach the debugger from the target. Cancel any\n"
   "                        # pending signals.\n"
   "detach -sig <sig>       # Detach while forwarding the given signal.\n"
   "(dbx) "
#  Starting DBX...done.
#  Welcome to DDD 3.0!
-> "help run\n"
<- "run                    # Begin executing the program with the current arguments\n"
   "run <args>             # Begin executing the program with new arguments\n"
   "                         See also `help rerun\'\n"
   "\n"
<- "(dbx) "
-> "help step\n"
<- "step                   # Single step one line (step INTO calls).\n"
   "                       # With MT programs when a function call is skipped\n"
   "                       # over, all LWPs are implicitly resumed for the\n"
   "                       # duration of that function call in order to\n"
   "                       # avoid deadlock.\n"
   "                       # Non-active threads cannot be stepped.\n"
   "step <n>               # Single step <n> lines (step INTO calls)\n"
   "step up                # ... and out of the current function\n"
   "step ... -sig <sig>    # ... and deliver the given signal\n"
   "step ... <tid>         # Step the given thread. Does not apply to `step up\'.\n"
   "step ... <lwpid>       # Step the given LWP. Will not implicitly resume all\n"
   "                         LWPs when skipping a function.\n"
   "When an explicit <tid> or <lwpid> is given, the deadlock avoidance measure\n"
   "of the generic `step\' is defeated.\n"
<- "(dbx) "
-> "help stepi\n"
<- "stepi                  # Single step one machine instruction (step INTO calls)\n"
   "stepi <n>              # Single step <n> machine instructions (step INTO calls)\n"
   "stepi -sig <sig>       # ... and deliver the given signal\n"
   "stepi ... <lwpid>      # ... the given LWP.\n"
   "stepi ... <tid>        # ... the LWP on which the given thread is active.\n"
   "(dbx) "
-> "help next\n"
<- "next                   # Step one line (step OVER calls).\n"
   "                       # With MT programs when a function call is skipped\n"
   "                       # over, all LWPs are implicitly resumed for the\n"
   "                       # duration of that function call in order to\n"
   "                       # avoid deadlock.\n"
   "                       # Non-active threads cannot be stepped.\n"
   "next <n>               # Step <n> lines (skip OVER calls)\n"
   "next ... -sig <sig>    # deliver the given signal while nexting\n"
   "next ... <tid>         # Step the given thread.\n"
   "next ... <lwpid>       # Step the given LWP. Will not implicitly resume all\n"
   "                         LWPs when skipping a function.\n"
   "When an explicit <tid> or <lwpid> is given, the deadlock avoidance measure\n"
   "of the generic `next\' is defeated.\n"
<- "(dbx) "
-> "help nexti\n"
<- "nexti                 # Step one machine instruction (skip OVER calls)\n"
   "nexti <n>             # Step <n> machine instructions (skip OVER calls)\n"
   "nexti -sig <sig>      # deliver the given signal while nexting\n"
   "nexti ... <lwpid>     # ... the given LWP.\n"
   "nexti ... <tid>       # ... the LWP on which the given thread is active. Will\n"
   "                        not implicitly resume all LWPs when skipping a function.\n"
<- "(dbx) "
-> "help until\n"
<- "until is a shell keyword\n"
<- "(dbx) "
-> "help finish\n"
<- "finish is unknown\n"
<- "(dbx) "
-> "help cont\n"
<- "cont [sig <signo>] [<id>]            # Continue execution with signal <signo>\n"
   "cont at <line> [sig <signo>] <id>    # Continue execution at line <line> with\n"
   "                                       signal <signo>.  See `help continue\' for\n"
   "                                       dbx command language loop control.\n"
   "\n"
   "The <id>, if present, specifies which thread or LWP to continue.\n"
   "Default is `all\'. In the case of \'cont at\' the <id> is required.\n"
<- "(dbx) "
-> "help signal\n"
<- "signal is unknown\n"
<- "(dbx) "
-> "help kill\n"
<- "kill -l                 # List all known signal numbers, names, and descriptions\n"
   "kill                    # Kill the controlled process\n"
   "kill <job>...           # Send the SIGTERM signal to the listed jobs\n"
   "kill -<sig> <job>...    # Send the given signal to the listed jobs\n"
   "                          <job> may be a process ID or may be specified in\n"
   "                          any of the ways listed under `help fg\', but the `%\'\n"
   "                          is not optional in this case.\n"
<- "(dbx) "
-> "help up\n"
<- "up                     # Move up the call stack one level\n"
   "up <number>            # Move up the call stack <number> levels\n"
   "up -h [<number>]       # Move up the call stack, but don\'t skip hidden frames\n"
<- "(dbx) "
-> "help down\n"
<- "down                   # Move down the call stack one level\n"
   "down <number>          # Move down the call stack <number> levels\n"
   "down -h [<number>]     # Move down the call stack, but don\'t skip hidden frames\n"
<- "(dbx) "
#  Tool buttons are located in command tool.
#  Tool buttons are located in command toolbar.
-> "debug \n"
<- "Debugging: run.toi \n"
<- "(dbx) "
#  Saving options in "/home1/solaris/home/ppomes/.ddd/init"...
#  Saving options in "/home1/solaris/home/ppomes/.ddd/init"...done.
-> "commands\n"
<- ":\n"
   "unhide\n"
   "search\n"
   "ignore\n"
   "detach\n"
   "whereis\n"
   "times\n"
   "frame\n"
   "set\n"
   "make\n"
   "inspect\n"
   "stopi\n"
   "status\n"
   "dis\n"
   "unalias\n"
   "exit\n"
   "sh\n"
   "whence\n"
   "collector\n"
   "catch\n"
   "setenv\n"
   "_cb_aoutchange\n"
   "where\n"
   "umask\n"
   "kprint\n"
   "mark\n"
   "clear\n"
   "loadobjects\n"
   "kill\n"
   "export\n"
   "let\n"
   "clearcounts\n"
   "line\n"
   "trace\n"
   "tracei\n"
   "thread\n"
   "read\n"
   "import\n"
   "print\n"
   "call\n"
   "shift\n"
   "break\n"
   "test\n"
   "commands\n"
   "assign\n"
   "use\n"
   "unmenu\n"
   "threads\n"
   "cont\n"
   "debug\n"
   "list\n"
   "step\n"
   "rerun\n"
   "handler\n"
   "delete\n"
   "dbxenv\n"
   "false\n"
   "hide\n"
   "examine\n"
   "eval\n"
   ".\n"
   "bind\n"
   "file\n"
   "bsearch\n"
   "next\n"
   "cancel\n"
   "ulimit\n"
   "quit\n"
   "fg\n"
   "funcs\n"
   "toolenv\n"
   "getopts\n"
   "save\n"
   "rprint\n"
   "edit\n"
   "lwps\n"
   "down\n"
   "showleaks\n"
   "continue\n"
   "exists\n"
   "dalias\n"
   "run\n"
   "unsuppress\n"
   "builtin\n"
   "suppress\n"
   "up\n"
   "source\n"
   "listi\n"
   "stop\n"
   "fixed\n"
   "whereami\n"
   "cd\n"
   "undisplay\n"
   "dbxbugreport\n"
   "button\n"
   "loadobject\n"
   "display\n"
   "restore\n"
   "modules\n"
   "hash\n"
   "fc\n"
   "unbutton\n"
   "pathmap\n"
   "unintercept\n"
   "intercept\n"
   "dumpcounts\n"
   "fix\n"
   "nexti\n"
   "help\n"
   "demangle\n"
   "return\n"
   "stepi\n"
   "unset\n"
   "readonly\n"
   "dump\n"
   "[\n"
   "whocatches\n"
   "files\n"
   "language\n"
   "history\n"
   "jobs\n"
   "func\n"
   "_cb_prompt\n"
   "whatis\n"
   "trap\n"
   "true\n"
   "lwp\n"
   "pop\n"
   "bg\n"
   "which\n"
   "wait\n"
   "document\n"
   "menu\n"
   "dbxdebug\n"
   "module\n"
   "uncheck\n"
   "replay\n"
   "check\n"
   "exec\n"
   "typeset\n"
   "kalias\n"
   "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "Running: run.toi \n"
<- "(process id 17238)\n"
<- "Reading symbolic information for /usr/lib/nss_files.so.1\n"
<- "\n"
   "execution completed, exit code is 0\n"
<- "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
<- "(dbx) "
-> "status\n"
<- "(dbx) "
-> "frame\n"
<- "dbx: program is not active\n"
<- "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "Running: run.toi \n"
<- "(process id 17455)\n"
<- "Skipping /usr/lib/nss_files.so.1, already read\n"
<- "\n"
   "execution completed, exit code is 0\n"
   "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
   "(dbx) "
-> "status\n"
<- "(dbx) "
-> "frame\n"
<- "dbx: program is not active\n"
   "(dbx) "
-> "debug \n"
<- "Debugging: run.toi \n"
   "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "Running: run.toi \n"
<- "(process id 17978)\n"
<- "Skipping /usr/lib/nss_files.so.1, already read\n"
<- "\n"
<- "execution completed, exit code is 0\n"
<- "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
   "(dbx) "
-> "status\n"
<- "(dbx) "
-> "frame\n"
<- "dbx: program is not active\n"
<- "(dbx) "
-> "debug \n"
<- "Debugging: run.toi \n"
   "(dbx) "
-> "stop at toi_sequence_added.c:396\n"
<- "dbx: warning: Objectfile \'./obj/dbg/toi_sequence_added.o\' is newer than image in executable. Skipping stabs (see `help module\').\n"
<- "dbx: no executable code at line \"toi_sequence_added.c\":396\n"
<- "(dbx) "
-> "status\n"
<- "(dbx) "
-> "debug /home1/solaris/home/ppomes/ws/8P11/toi/run.toi\n"
<- "Loadobject /home1/solaris/home/ppomes/ws/8P11/toi/run.toi is out of date; rereading.\n"
   "Reading symbolic information for run.toi\n"
<- "Skipping /usr/lib/ld.so.1, already read\n"
<- "Skipping /usr/lib/libm.so.1, already read\n"
<- "Skipping /usr/lib/libsocket.so.1, already read\n"
<- "Skipping /usr/lib/libnsl.so.1, already read\n"
<- "Skipping /usr/lib/libc.so.1, already read\n"
<- "Skipping /usr/lib/libdl.so.1, already read\n"
   "Skipping /usr/lib/libintl.so.1, already read\n"
<- "Skipping /usr/lib/libmp.so.1, already read\n"
<- "Skipping /usr/lib/libw.so.1, already read\n"
<- "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
   "(dbx) "
-> "list\n"
<- "   36   \t\t       );\n"
   "   37     \n"
   "   38     if (iRetCode == 0)\n"
   "   39       {\n"
   "   40         toi_main( OptionStatus );\n"
<- "   41         toi_stop() ;\n"
<- "   42       } /* end if*/\n"
<- "   43     \n"
<- "   44     return(iRetCode);\n"
<- "   45   }\n"
<- "(dbx) "
-> "status\n"
<- "(dbx) "
-> "display\n"
<- "(dbx) "
-> "debug \n"
<- "Debugging: run.toi \n"
   "(dbx) "
-> "stop at toi_sequence_added.c:396\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
<- "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
<- "(dbx) "
-> "list main\n"
<- "   31     \n"
   "   32     iRetCode = toi_start(\n"
   "   33   \t\t       iArgc, \n"
   "   34   \t\t       pacArgv, \n"
   "   35   \t\t       &OptionStatus\n"
   "   36   \t\t       );\n"
   "   37     \n"
   "   38     if (iRetCode == 0)\n"
   "   39       {\n"
   "   40         toi_main( OptionStatus );\n"
   "   41         toi_stop() ;\n"
   "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
   "(dbx) "
-> "print -r end\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"end\" is not defined in the current scope\n"
   "dbx: see `help scope\' for details\n"
   "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "Running: run.toi \n"
<- "(process id 21028)\n"
<- "Skipping /usr/lib/nss_files.so.1, already read\n"
<- "stopped in toi_sequence_added at line 397 in file \"src/toi_sequence_added.c\"\n"
<- "  397         if (!bDone)\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c"...
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c"...done.
#  File "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c" 541 lines, 23154 characters
-> "print -r bDone\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "bDone = FALSE\n"
   "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "\"run.toi\" has been recompiled - breakpoints may be incorrect.\n"
<- "Loadobject /home1/solaris/home/ppomes/ws/8P11/toi/run.toi is out of date; rereading.\n"
<- "Reading symbolic information for run.toi\n"
<- "Skipping /usr/lib/ld.so.1, already read\n"
<- "Skipping /usr/lib/libm.so.1, already read\n"
<- "Skipping /usr/lib/libsocket.so.1, already read\n"
<- "Skipping /usr/lib/libnsl.so.1, already read\n"
<- "Skipping /usr/lib/libc.so.1, already read\n"
<- "Skipping /usr/lib/libdl.so.1, already read\n"
<- "Skipping /usr/lib/libintl.so.1, already read\n"
<- "Skipping /usr/lib/libmp.so.1, already read\n"
<- "Skipping /usr/lib/libw.so.1, already read\n"
<- "Running: run.toi \n"
<- "(process id 21090)\n"
<- "Skipping /usr/lib/nss_files.so.1, already read\n"
<- "stopped in toi_sequence_added at line 397 in file \"src/toi_sequence_added.c\"\n"
<- "  397         if (bDone)\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c"...
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c"...done.
#  File "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c" 541 lines, 23153 characters
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display\n"
<- "(dbx) "
-> "print -r pErrorStruct\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pErrorStruct = 0xeffff250\n"
   "(dbx) "
-> "print -r TOI_TAP_NOAGENCE_SIZE\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"TOI_TAP_NOAGENCE_SIZE\" is not defined in the current scope\n"
   "(dbx) "
-> "print -r RRetrieve\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "RRetrieve = {\n"
   "    common      = {\n"
   "        cVersion  = \"\"\n"
   "        cIATA     = \"\001\"\n"
   "        cAgencyId = \"\"\n"
   "    }\n"
   "    cTourOpId   = \"\"\n"
   "    cClientFile = \"\"\n"
   "    cScope      = \"\"\n"
   "    cReference  = \"\"\n"
   "}\n"
   "(dbx) "
-> "print -r bDone\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "bDone = FALSE\n"
<- "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 426 in file \"src/toi_sequence_added.c\"\n"
   "  426          && (pErrorStruct->iErrorLevel == WARNING)))\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
<- "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
<- "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "Running: run.toi \n"
<- "(process id 21329)\n"
<- "Skipping /usr/lib/nss_files.so.1, already read\n"
<- "stopped in toi_sequence_added at line 397 in file \"src/toi_sequence_added.c\"\n"
<- "  397         if (bDone)\n"
<- "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "print -r bDone\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "bDone = TRUE\n"
   "(dbx) "
-> "print -r pErrorStruct->iErrorLevel\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "pErrorStruct->iErrorLevel = 0\n"
<- "(dbx) "
-> "print -r pErrorStruct\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "pErrorStruct = 0xeffff250\n"
<- "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 399 in file \"src/toi_sequence_added.c\"\n"
   "  399   \t  ZFILL(RRetrieve);\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 400 in file \"src/toi_sequence_added.c\"\n"
   "  400   \t  ZFILLP(pRetrieve);\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 401 in file \"src/toi_sequence_added.c\"\n"
   "  401   \t  strcpysafe(RRetrieve.common.cAgencyId,\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 405 in file \"src/toi_sequence_added.c\"\n"
   "  405   \t  strcpysafe(RRetrieve.cClientFile,\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 410 in file \"src/toi_sequence_added.c\"\n"
<- "  410   \t\t       &ErrorStructAdd) ;\n"
<- "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
<- "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
<- "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 411 in file \"src/toi_sequence_added.c\"\n"
<- "dbx: warning: File `/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c\' has been modified more recently than `/home1/solaris/home/ppomes/ws/8P11/toi/run.toi\'\n"
   "  411   \t  if (!ErrorStructAdd.bOk)\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 426 in file \"src/toi_sequence_added.c\"\n"
   "  426          && (pErrorStruct->iErrorLevel == WARNING)))\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "cont\n"
<- "stopped in toi_sequence_added at line 397 in file \"src/toi_sequence_added.c\"\n"
<- "  397         if (bDone)\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "print -r WARNING\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"WARNING\" is not defined in the current scope\n"
<- "(dbx) "
-> "print -r pErrorStruct\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pErrorStruct = 0xeffff250\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 426 in file \"src/toi_sequence_added.c\"\n"
   "  426          && (pErrorStruct->iErrorLevel == WARNING)))\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "Running: run.toi \n"
<- "(process id 21778)\n"
<- "Skipping /usr/lib/nss_files.so.1, already read\n"
<- "stopped in toi_sequence_added at line 397 in file \"src/toi_sequence_added.c\"\n"
<- "  397         if (bDone)\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
<- "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
<- "(dbx) "
-> "frame\n"
<- "1\n"
<- "(dbx) "
-> "print -r bDone\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "bDone = FALSE\n"
   "(dbx) "
-> "print -r pErrorStruct\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pErrorStruct = 0xeffff250\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 426 in file \"src/toi_sequence_added.c\"\n"
   "  426          && (pErrorStruct->iErrorLevel == WARNING)))\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 428 in file \"src/toi_sequence_added.c\"\n"
   "  428         ZFILL(Out_Msg_Rec);\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 429 in file \"src/toi_sequence_added.c\"\n"
   "  429         if (pBooking != (BOOKING_STRUCT *) NULL)\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 431 in file \"src/toi_sequence_added.c\"\n"
   "  431             strcpysafe(Out_Msg_Rec.sTOResnum,\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "next\n"
<- "stopped in toi_sequence_added at line 434 in file \"src/toi_sequence_added.c\"\n"
<- "  434             strcpysafe(Out_Msg_Rec.sNoDossier,\n"
<- "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
   "(dbx) "
-> "print -r pErrorStruct\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pErrorStruct = 0xeffff250\n"
   "(dbx) "
-> "cont\n"
<- "\n"
   "execution completed, exit code is 0\n"
<- "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":397\n"
   "(dbx) "
-> "frame\n"
<- "dbx: program is not active\n"
<- "(dbx) "
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/run_toi.c"...
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/run_toi.c"...done.
#  File "/home1/solaris/home/ppomes/ws/8P11/toi/src/run_toi.c" 49 lines, 1434 characters
-> "print -r DESCRIPTION\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"DESCRIPTION\" is not defined in the current scope\n"
<- "(dbx) "
-> "handler -disable 2\n"
<- "(dbx) "
-> "status\n"
<- "[2] stop at \"src/toi_sequence_added.c\":397 -disable\n"
   "(dbx) "
-> "stop at toi_component_added.c:393\n"
<- "dbx: warning: Objectfile \'./obj/dbg/toi_component_added.o\' is newer than image in executable. Skipping stabs (see `help module\').\n"
<- "dbx: no executable code at line \"toi_component_added.c\":393\n"
<- "(dbx) "
-> "status\n"
<- "[2] stop at \"src/toi_sequence_added.c\":397 -disable\n"
   "(dbx) "
-> "delete 2\n"
<- "(dbx) "
-> "status\n"
<- "(dbx) "
-> "help recentMenu\n"
<- "recentMenu is unknown\n"
<- "(dbx) "
-> "debug /home1/solaris/home/ppomes/ws/8P11/toi/run.toi\n"
<- "Loadobject /home1/solaris/home/ppomes/ws/8P11/toi/run.toi is out of date; rereading.\n"
<- "Reading symbolic information for run.toi\n"
<- "Skipping /usr/lib/ld.so.1, already read\n"
<- "Skipping /usr/lib/libm.so.1, already read\n"
<- "Skipping /usr/lib/libsocket.so.1, already read\n"
<- "Skipping /usr/lib/libnsl.so.1, already read\n"
<- "Skipping /usr/lib/libc.so.1, already read\n"
<- "Skipping /usr/lib/libdl.so.1, already read\n"
<- "Skipping /usr/lib/libintl.so.1, already read\n"
<- "Skipping /usr/lib/libmp.so.1, already read\n"
<- "Skipping /usr/lib/libw.so.1, already read\n"
<- "(dbx) "
-> "file\n"
<- "src/run_toi.c\n"
<- "(dbx) "
-> "list\n"
<- "   36   \t\t       );\n"
<- "   37     \n"
<- "   38     if (iRetCode == 0)\n"
<- "   39       {\n"
<- "   40         toi_main( OptionStatus );\n"
<- "   41         toi_stop() ;\n"
<- "   42       } /* end if*/\n"
<- "   43     \n"
<- "   44     return(iRetCode);\n"
<- "   45   }\n"
<- "(dbx) "
-> "status\n"
<- "(dbx) "
-> "display\n"
<- "(dbx) "
-> "debug \n"
<- "Debugging: run.toi \n"
<- "(dbx) "
-> "stop at toi_sequence_added.c:393\n"
<- "(2) stop at \"src/toi_sequence_added.c\":395\n"
<- "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":395\n"
<- "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "Running: run.toi \n"
<- "(process id 7302)\n"
<- "Skipping /usr/lib/nss_files.so.1, already read\n"
<- "stopped in toi_sequence_added at line 395 in file \"src/toi_sequence_added.c\"\n"
<- "  395          && (pErrorStruct->iErrorLevel == WARNING)))\n"
<- "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":395\n"
   "(dbx) "
-> "frame\n"
<- "1\n"
<- "(dbx) "
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c"...
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c"...done.
#  File "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c" 541 lines, 23218 characters
-> "debug \n"
<- "Debugging: run.toi (process id 7302)\n"
   "(dbx) "
-> "print -r _Xdebug\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"_Xdebug\" is not defined in the current scope\n"
   "(dbx) "
-> "print -r pErrorStruct\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "pErrorStruct = 0xeffff250\n"
   "(dbx) "
-> "print -r RRetrieve\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "RRetrieve = {\n"
   "    common      = {\n"
   "        cVersion  = \"\"\n"
   "        cIATA     = \"\"\n"
   "        cAgencyId = \"\"\n"
   "    }\n"
   "    cTourOpId   = \"\"\n"
   "    cClientFile = \"\"\n"
   "    cScope      = \"\"\n"
   "    cReference  = \"\"\n"
   "}\n"
   "(dbx) "
-> "print -r TOI_TN_CLIENT_FILE_SIZE\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"TOI_TN_CLIENT_FILE_SIZE\" is not defined in the current scope\n"
   "(dbx) "
-> "print -r ErrorStructAdd.bOk\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "ErrorStructAdd.bOk = TRUE\n"
<- "(dbx) "
-> "print -r pRetrieve\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pRetrieve = 0xeffe1730\n"
   "(dbx) "
-> "print -r ErrorStructAdd\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "ErrorStructAdd = {\n"
   "    bOk                = TRUE\n"
   "    iErrorNumber       = 0\n"
   "    iItemNumber        = 0\n"
   "    sFuncName          = \"\"\n"
   "    sSubName           = \"\"\n"
   "    iErrorLevel        = 0\n"
   "    sInformation       = \"\"\n"
   "    pSupplementaryData = (nil)\n"
   "}\n"
   "(dbx) "
-> "print -r pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c48\n"
   "(dbx) "
-> "print -r pBooking->sClientFile\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "pBooking->sClientFile = \"\"\n"
   "(dbx) "
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "pBooking = 0x106c48\n"
   "(dbx) "
-> "print -r pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c48\n"
   "(dbx) "
-> "display\n"
<- "(1) pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
#  Display 1: pBooking (enabled, scope toi_sequence_added)
#  Display 1: pBooking (enabled, scope toi_sequence_added)
#  In display 1: pBooking (double-click to dereference)
-> "list pBooking\n"
<- "dbx: \"pBooking\" is not defined as a function or procedure in the current scope\n"
   "(dbx) "
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c48\n"
<- "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4198\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106da0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x1059e0\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4198\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106da0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x1059e0\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(1) pBooking\n"
   "(2) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
#  Display 2: *pBooking (enabled, scope toi_sequence_added)
#  Display 2: *pBooking (enabled, scope toi_sequence_added)
#  Display 2: *pBooking (enabled, scope toi_sequence_added)
#  Display 2: *pBooking (enabled, scope toi_sequence_added)
-> "list *pBooking\n"
<- "dbx: syntax error on \"*\"\n"
   "(dbx) "
#  Display 2: *pBooking (enabled, scope toi_sequence_added)
-> "print -r booking\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"booking\" is not defined in the current scope\n"
   "(dbx) "
-> "stop at toi_sequence_added.c:393\n"
<- "(3) stop at \"src/toi_sequence_added.c\":395\n"
<- "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":395\n"
<- "(3) stop at \"src/toi_sequence_added.c\":395\n"
<- "(dbx) "
-> "delete 2\n"
<- "(dbx) "
-> "status\n"
<- "(3) stop at \"src/toi_sequence_added.c\":395\n"
   "(dbx) "
-> "setenv TERM dumb\n"
<- "(dbx) "
-> "run\n"
<- "\"run.toi\" has been recompiled - breakpoints may be incorrect.\n"
<- "Loadobject /home1/solaris/home/ppomes/ws/8P11/toi/run.toi is out of date; rereading.\n"
<- "Reading symbolic information for run.toi\n"
<- "Skipping /usr/lib/ld.so.1, already read\n"
<- "Skipping /usr/lib/libm.so.1, already read\n"
<- "Skipping /usr/lib/libsocket.so.1, already read\n"
<- "Skipping /usr/lib/libnsl.so.1, already read\n"
<- "Skipping /usr/lib/libc.so.1, already read\n"
<- "Skipping /usr/lib/libdl.so.1, already read\n"
   "Skipping /usr/lib/libintl.so.1, already read\n"
<- "Skipping /usr/lib/libmp.so.1, already read\n"
<- "Skipping /usr/lib/libw.so.1, already read\n"
<- "Running: run.toi \n"
<- "(process id 7967)\n"
<- "Skipping /usr/lib/nss_files.so.1, already read\n"
<- "stopped in toi_sequence_added at line 395 in file \"src/toi_sequence_added.c\"\n"
<- "  395          && (pErrorStruct->iErrorLevel == WARNING)))\n"
<- "pBooking = 0x106c68\n"
<- "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "file\n"
<- "src/toi_sequence_added.c\n"
<- "(dbx) "
-> "status\n"
<- "(2) stop at \"src/toi_sequence_added.c\":395\n"
<- "(dbx) "
-> "frame\n"
<- "1\n"
<- "(dbx) "
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c"...
#  Reading file "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c"...done.
#  File "/home1/solaris/home/ppomes/ws/8P11/toi/src/toi_sequence_added.c" 542 lines, 23272 characters
-> "func\n"
#  Updating displays...
#  Updating displays...done.
<- "toi_sequence_added\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "(dbx) "
#  Deferring displays 1 and 2 because they have been deleted by DBX
-> "display -r pBooking\n"
#  Updating displays...
#  Updating displays...done.
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
#  Display 4: pBooking (enabled, scope toi_sequence_added)
#  Display 4: pBooking (enabled, scope toi_sequence_added)
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
-> "print -r pBooking->sClientFile\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "pBooking->sClientFile = \"\"\n"
   "(dbx) "
#  In display 4: pBooking (double-click to dereference)
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
#  In display 4: pBooking (double-click to dereference)
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
#  In display 4: pBooking (double-click to dereference)
#  In display 4: pBooking (double-click to dereference)
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
#  In display 4: pBooking (double-click to dereference)
#  In display 4: pBooking (double-click to dereference)
#  In display 4: pBooking (double-click to dereference)
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
-> "print -r booking\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"booking\" is not defined in the current scope\n"
   "(dbx) "
-> "print -r pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "(dbx) "
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
#  In display 4: pBooking (double-click to dereference)
#  In display 4: pBooking (double-click to dereference)
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
-> "print -r ZFILLP\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"ZFILLP\" is not defined in the current scope\n"
<- "(dbx) "
-> "print -r ZFILL\n"
<- "dbx: warning: -r option only recognized for C++\n"
<- "dbx: \"ZFILL\" is not defined in the current scope\n"
   "(dbx) "
-> "func\n"
<- "toi_sequence_added\n"
   "(dbx) "
-> "display -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pBooking = 0x106c68\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "print -r *pBooking\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "*pBooking = {\n"
   "    sResNum     = \"123456789\"\n"
   "    sClientFile = \"\"\n"
   "    Sequence    = (\n"
   "{\n"
   "        iTypeSeq      = CANCELED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 0\n"
   "        iNumComponent = 0\n"
   "        Component     = (nil)\n"
   "        iNumPax       = 0\n"
   "        Pax           = (nil)\n"
   "    }{\n"
   "        iTypeSeq      = ADDED\n"
   "        bCopyBooking  = FALSE\n"
   "        iErrNumAtt    = 4225\n"
   "        iNumComponent = 1\n"
   "        Component     = 0x106dc0\n"
   "        iNumPax       = 2\n"
   "        Pax           = 0x105a00\n"
   "    }\n"
   ")\n"
   "}\n"
   "(dbx) "
-> "display\n"
<- "(3) pBooking\n"
   "(4) *pBooking\n"
   "(dbx) "
#  Creating display...
#  Creating display...done.
-> "print -r pRetrieve\n"
<- "dbx: warning: -r option only recognized for C++\n"
   "pRetrieve = 0xeffe1730\n"
   "(dbx) "
