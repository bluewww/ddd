From jos@GBF.DE  Wed Nov 25 13:39:16 1998
From: Jochen Schuetze <jos@GBF.DE>
Subject: Re: [ddd-bugs] DEC alpha OSF1 4.0 878
To: Andreas Zeller <zeller@gnu.org>
Date: Wed, 25 Nov 1998 13:39:08 +0100 (MET)
Reply-To: jos@GBF.DE
X-Sender: jos@bvt4027.gbf-braunschweig.de
In-Reply-To: <ogbtlx86d2.fsf@infbssts.ips.cs.tu-bs.de>
Message-ID: <Pine.LNX.3.95.981125120617.292B-300000@bvt4027.gbf-braunschweig.de>
MIME-Version: 1.0

Ich tat, wie mir geheiﬂen. Die Positionserkennung funktioniert, aber jetzt
funktionieren leider "up" und "down" nicht mehr. DBX versteht wohl, was
ddd von ihm will, aber ddd zeigt die Positionen nicht an.
Ich h‰nge ein logfile an, das das zeigt.........

DDD 1998-11-24 (alphaev56-dec-osf4.0d), Copyright (C) 1998 TU Braunschweig.
Compiled with CC
Requires X11R6, Xt11R6, Motif 1.2.4 (OSF/Motif Version 1.2.4)
Includes DDD core, manual, app-defaults, Athena Panner
Built 1998-11-25 by Jochen Schuetze <jos@gbf.de>.
$  ddd cxxtest
+  /bin/sh -c 'exec dbx '\''cxxtest'\'''
#  Hello, world!
#  Starting DBX...
#  Enabling core dumps...
#  Enabling core dumps...done.
#  Running DBX (pid 18375, tty /dev/ttyp4)...
#  Current language: c/c++
<- "dbx version 3.11.10\n"
<- "Type \'help\' for help.\n"
<- "\n"
<- "main: 489  int i = 42;\n"
<- "(dbx) "
-> "sh stty -echo -onlcr\n"
<- "sh stty -echo -onlcr\r\n"
#  DBX is running in echo mode.
<- "(dbx) "
-> "set $page = 1\n"
<- "set $page = 1\r\n"
<- "(dbx) "
-> "frame\n"
<- "frame\r\n"
<- "frame\r\n"
<- "     ^ syntax error\r\n"
<- "(dbx) "
-> "func\n"
<- "func\r\n"
<- "main\r\n"
<- "(dbx) "
-> "dbxenv run_io\n"
<- "dbxenv run_io\r\n"
<- "dbxenv run_io\r\n"
<- "       ^ syntax error\r\n"
<- "(dbx) "
-> "print -r 4711\n"
<- "print -r 4711\r\n"
<- "print -r 4711\r\n"
<- "         ^ syntax error\r\n"
<- "(dbx) "
-> "where -h\n"
<- "where -h\r\n"
<- "where -h\r\n"
<- "      ^ syntax error\r\n"
<- "(dbx) "
-> "display\n"
<- "display\r\n"
<- "display\r\n"
<- "       ^ syntax error\r\n"
<- "(dbx) "
-> "clear\n"
<- "clear\r\n"
<- "clear\r\n"
<- "     ^ syntax error\r\n"
<- "(dbx) "
-> "help handler\n"
<- "help handler\r\n"
<- "\r\n"
<- "Invalid keyword handler\r\n"
<- "\r\n"
<- "(dbx) "
-> "pwd\n"
<- "pwd\r\n"
<- "pwd\r\n"
<- "   ^ syntax error\r\n"
<- "(dbx) "
-> "help setenv\n"
<- "help setenv\r\n"
<- "setenv name \"string\"\t       - set environment variable <name> to <string>\r\n"
<- "(dbx) "
-> "help edit\n"
<- "help edit\r\n"
<- "edit                           - invoke editor on current file\r\n"
<- "edit <file>                    - invoke editor on file\r\n"
<- "(dbx) "
-> "help make\n"
<- "help make\r\n"
<- "\r\n"
<- "Invalid keyword make\r\n"
<- "\r\n"
<- "(dbx) "
-> "help regs\n"
<- "help regs\r\n"
<- "\r\n"
<- "Invalid keyword regs\r\n"
<- "\r\n"
<- "(dbx) "
-> "print \"DDD\"\n"
<- "print \"DDD\"\r\n"
<- "DDD \r\n"
<- "(dbx) "
-> "help when\n"
<- "help when\r\n"
<- "when <exp> { <command_list> }  - when <exp> is true, execute command_list\r\n"
<- "when at <line>{<command_list>} - when reach <line>, execute command_list\r\n"
<- "when in <proc>{<command_list>} - when reach <proc>, execute command_list\r\n"
<- "(dbx) "
-> "delete 4711 4711\n"
<- "delete 4711 4711\r\n"
<- "delete 4711 4711\r\n"
<- "            ^ syntax error\r\n"
<- "(dbx) "
-> "help run\n"
<- "help run\r\n"
<- "run arg1 arg2 ... < f1 >& f2   - begin execution of the program\r\n"
<- "(dbx) "
-> "help givenfile\n"
<- "help givenfile\r\n"
<- "\r\n"
<- "Invalid keyword givenfile\r\n"
<- "\r\n"
<- "(dbx) "
-> "help cont\n"
<- "help cont\r\n"
<- "[n] cont                       - continue execution\r\n"
<- "[n] cont <signal>              - continue with signal\r\n"
<- "cont to <line>                 - continue until <line> is reached\r\n"
<- "\t\t\t\t(temporary breakpoint)\r\n"
<- "cont in <proc>                 - continue until <proc> is reached  (see above)\r\n"
<- "cont <signal> to <line>        - continue with signal until <line> (see above)\r\n"
<- "cont <signal> in <proc>        - continue with signal until <proc> (see above)\r\n"
<- "(dbx) "
-> "help examine\n"
<- "help examine\r\n"
<- "\r\n"
<- "Invalid keyword examine\r\n"
<- "\r\n"
<- "(dbx) "
-> "help rerun\n"
<- "help rerun\r\n"
<- "rerun                          - restart execution of the program\r\n"
<- "(dbx) "
-> "language\n"
<- "language\r\n"
<- "language\r\n"
<- "        ^ syntax error\r\n"
<- "(dbx) "
-> "sh pwd\n"
<- "sh pwd\r\n"
<- "/data/jos/ddd-1998-11-24/ddd\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "list\n"
<- "list\r\n"
<- "   490      tree_test();\r\n"
<- "   491      i++;\r\n"
<- "   492      list_test(i);\r\n"
<- "   493      i++;\r\n"
<- "   494      array_test();\r\n"
<- "   495      i++;\r\n"
<- "   496      plot_test();\r\n"
<- "   497      i++;\r\n"
<- "   498      type_test();\r\n"
<- "   499      --i;\r\n"
<- "   500      cin_cout_test();\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "(dbx) "
#  Reading file "/data/jos/ddd-1998-11-24/ddd/cxxtest.C"...
#  Reading file "/data/jos/ddd-1998-11-24/ddd/cxxtest.C"...done.
#  File "/data/jos/ddd-1998-11-24/ddd/cxxtest.C" 502 lines, 11480 characters
-> "debug \n"
<- "debug \r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
-> "sh stty -echo -onlcr\n"
<- "sh stty -echo -onlcr\r\n"
<- "(dbx) "
-> "# reset\n"
<- "# reset\r\n"
<- "# reset\r\n"
<- "       ^ syntax error\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "list\n"
<- "list\r\n"
<- "   501      return 0;\r\n"
<- "   502  }\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "(dbx) "
-> "debug \n"
<- "debug \r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
-> "help detach\n"
<- "help detach\r\n"
<- "detach [<exp>]\t\t\t- detach from process with pid <exp> or\r\n"
<- "\t\t\t\t  current process; process continues running\r\n"
<- "(dbx) "
-> "help run\n"
<- "help run\r\n"
<- "run arg1 arg2 ... < f1 >& f2   - begin execution of the program\r\n"
<- "(dbx) "
-> "help step\n"
<- "help step\r\n"
<- "step <int>                     - single step n lines (assumes 1 for <int>)\r\n"
<- "(dbx) "
-> "help stepi\n"
<- "help stepi\r\n"
<- "stepi <exp>                    - single step <exp> assembly instructions\r\n"
<- "(dbx) "
-> "help next\n"
<- "help next\r\n"
<- "next <int>                     - step over next line n times (assumes 1)\r\n"
<- "(dbx) "
-> "help nexti\n"
<- "help nexti\r\n"
<- "nexti <exp>                    - step over next instruction <exp>times(see next)\r\n"
<- "(dbx) "
-> "help until\n"
<- "help until\r\n"
<- "\r\n"
<- "Invalid keyword until\r\n"
<- "\r\n"
<- "(dbx) "
-> "print tree_test\n"
<- "print tree_test\r\n"
<- "\r\n"
<- "\"tree_test\" is not defined or not active\r\n"
<- "(dbx) "
#  Starting DBX...done.
#  Welcome to DDD 1998-11-24 "Nightsleeper" (alphaev56-dec-osf4.0d)
-> "help cont\n"
<- "help cont\r\n"
<- "[n] cont                       - continue execution\r\n"
<- "[n] cont <signal>              - continue with signal\r\n"
<- "cont to <line>                 - continue until <line> is reached\r\n"
<- "\t\t\t\t(temporary breakpoint)\r\n"
<- "cont in <proc>                 - continue until <proc> is reached  (see above)\r\n"
<- "cont <signal> to <line>        - continue with signal until <line> (see above)\r\n"
<- "cont <signal> in <proc>        - continue with signal until <proc> (see above)\r\n"
<- "(dbx) "
-> "help signal\n"
<- "help signal\r\n"
<- "\r\n"
<- "Invalid keyword signal\r\n"
<- "\r\n"
<- "(dbx) "
-> "help kill\n"
<- "help kill\r\n"
<- "\r\n"
<- "Invalid keyword kill\r\n"
<- "\r\n"
<- "(dbx) "
-> "help up\n"
<- "help up\r\n"
<- "up <exp>                       - move up <exp> activation levels in the stack\r\n"
<- "(dbx) "
-> "help down\n"
<- "help down\r\n"
<- "down <exp>                     - move down <exp> activation levels in the stack\r\n"
<- "(dbx) "
-> "file cxxtest.C\n"
<- "file cxxtest.C\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "(dbx) "
-> "stop at 489\n"
<- "stop at 489\r\n"
<- "[2] stop at \"cxxtest.C\":489\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "[2] stop at \"cxxtest.C\":489\r\n"
<- "\r\n"
<- "(dbx) "
-> "commands\n"
<- "commands\r\n"
<- "commands\r\n"
<- "        ^ syntax error\r\n"
<- "(dbx) "
#  Starting execution window...
+  /bin/sh -c 'tmp=${TMPDIR-/tmp}/ddd$$; export tmp; trap "rm -f $tmp" 0; trap '\''exit 1'\'' 1 2 15; xterm -bg '\''grey96'\'' -fg '\''black'\'' -cr '\''DarkGreen'\'' -fn '\''-*-lucidatypewriter-medium-r-*-*-*-120-*-*-*-*-iso8859-*'\'' -title '\''DDD: Execution Window'\'' -e /bin/sh -c '\''echo `tty` $$ $TERM $WINDOWID >$tmp; trap "" 2; while true; do sleep 3600; done'\'' >/dev/null </dev/null 2>&1 & while test ! -s $tmp; do sleep 1; done; cat $tmp'
#  Starting execution window...done.
#  Initializing execution window...
#  Initializing execution window...done.
-> "setenv TERM xterm\n"
<- "s"
<- "e"
<- "t"
<- "e"
<- "n"
<- "v"
<- " TERM xterm\r\n"
<- "(dbx) "
-> "rerun < /dev/ttyp5 >& /dev/ttyp5\n"
<- "rerun < /dev/ttyp5 >& /dev/ttyp5\r\n"
<- "[2] "
<- "stopped at "
<- "  "
<- "["
<- "main"
<- ":489 "
<- ","
<- "0x120004e2c"
<- "]"
<- " \t"
<- "int i = 42;\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "status\n"
<- "s"
<- "t"
<- "a"
<- "t"
<- "u"
<- "s"
<- "\r\n"
<- "[2] "
<- "stop"
<- " at "
<- "\""
<- "c"
<- "x"
<- "x"
<- "t"
<- "e"
<- "s"
<- "t"
<- "."
<- "C"
<- "\""
<- ":"
<- "489"
<- "\r\n"
<- "\r\n"
<- "(dbx) "
-> "step\n"
<- "step\r\n"
<- "  "
<- "["
<- "main"
<- ":490 "
<- ","
<- "0x120004e30"
<- "]"
<- " \t"
<- "tree_test();\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "status\n"
<- "s"
<- "t"
<- "a"
<- "t"
<- "u"
<- "s"
<- "\r\n"
<- "[2] "
<- "stop"
<- " at "
<- "\""
<- "c"
<- "x"
<- "x"
<- "t"
<- "e"
<- "s"
<- "t"
<- "."
<- "C"
<- "\""
<- ":"
<- "489"
<- "\r\n"
<- "\r\n"
<- "(dbx) "
-> "step\n"
<- "step\r\n"
<- "  "
<- "["
<- "tree_test__Xv"
<- ":277 "
<- ","
<- "0x12000416c"
<- "]"
<- " \t"
<- "Tree *tree = 0;\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "status\n"
<- "s"
<- "t"
<- "a"
<- "t"
<- "u"
<- "s"
<- "\r\n"
<- "[2] "
<- "stop"
<- " at "
<- "\""
<- "c"
<- "x"
<- "x"
<- "t"
<- "e"
<- "s"
<- "t"
<- "."
<- "C"
<- "\""
<- ":"
<- "489"
<- "\r\n"
<- "\r\n"
<- "(dbx) "
-> "step\n"
<- "step\r\n"
<- "  "
<- "[tree_test__Xv:279 ,0x120004170] \ttree = new Tree(7, \"Ada\");                        // Byron Lovelace\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "[2] stop at \"cxxtest.C\":489\r\n"
<- "\r\n"
<- "(dbx) "
-> "step\n"
<- "step\r\n"
<- "\n"
<- "warning: \"./cxxtest.C\":157 has no code associated with it\n"
<- "\n"
<- "  [__ct__4TreeXiPCc\n"
<- "warning: \"./cxxtest.C\":157 has no code associated with it\n"
<- "\n"
<- ":157 +0x20003d85,0x120003d84]"
<- " \t"
<- "Tree(int v, const char *n):\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "status\n"
<- "s"
<- "t"
<- "a"
<- "t"
<- "u"
<- "s"
<- "\r\n"
<- "[2] "
<- "stop"
<- " at "
<- "\""
<- "c"
<- "x"
<- "x"
<- "t"
<- "e"
<- "s"
<- "t"
<- "."
<- "C"
<- "\""
<- ":"
<- "489"
<- "\r\n"
<- "\r\n"
<- "(dbx) "
-> "where\n"
<- "where\r\n"
<- ">  0 "
<- "__ct__4TreeXiPCc"
<- "("
<- "this = "
<- "0x140005280"
<- ", "
<- "v = "
<- "7"
<- ", "
<- "n = "
<- "0x1200030c0"
<- " = "
<- "\"Ada\")"
<- " [\"./cxxtest.C\""
<- ":157"
<- ", 0x120003d84"
<- "]\r\n"
<- "   1 "
<- "tree_test__Xv"
<- "("
<- ")"
<- " [\"./cxxtest.C\""
<- ":279"
<- ", 0x1200041b4"
<- "]\r\n"
<- "   2 "
<- "main"
<- "("
<- " = "
<- "1"
<- ", "
<- " = "
<- "0x11ffffc28"
<- ")"
<- " [\"./cxxtest.C\""
<- ":490"
<- ", 0x120004e30"
<- "]\r\n"
<- "(dbx) "
-> "up\n"
<- "up\r\n"
<- "tree_test__Xv:"
<- " 279  "
<- "tree = new Tree(7, \"Ada\");                        // Byron Lovelace\r\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "up\n"
<- "up\r\n"
<- "main: 490  tree_test();\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "down\n"
<- "down\r\n"
<- "tree_test__Xv:"
<- " 279  "
<- "tree = new Tree(7, \"Ada\");                        // Byron Lovelace\r\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "down\n"
<- "down\r\n"
<- "__ct__4TreeXiPCc: 157  Tree(int v, const char *n):\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "up\n"
<- "up\r\n"
<- "tree_test__Xv:"
<- " 279  "
<- "tree = new Tree(7, \"Ada\");                        // Byron Lovelace\r\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "up\n"
<- "up\r\n"
<- "main: 490  tree_test();\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "down\n"
<- "down\r\n"
<- "tree_test__Xv: 279  tree = new Tree(7, \"Ada\");                        // Byron Lovelace\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "down\n"
<- "down\r\n"
<- "__ct__4TreeXiPCc: 157  Tree(int v, const char *n):\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "up\n"
<- "up\r\n"
<- "tree_test__Xv:"
<- " 279  "
<- "tree = new Tree(7, \"Ada\");                        // Byron Lovelace\r\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "up\n"
<- "up\r\n"
<- "main: 490  tree_test();\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "down\n"
<- "down\r\n"
<- "tree_test__Xv: 279  tree = new Tree(7, \"Ada\");                        // Byron Lovelace\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
-> "down\n"
<- "down\r\n"
<- "__ct__4TreeXiPCc: 157  Tree(int v, const char *n):\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "./cxxtest.C\r\n"
<- "(dbx) "
#  Closing execution window...
#  Closing execution window...done.
-> "setenv TERM dumb\n"
<- "s"
<- "e"
<- "t"
<- "e"
<- "n"
<- "v"
<- " "
<- "T"
<- "E"
<- "R"
<- "M"
<- " "
<- "d"
<- "u"
<- "m"
<- "b"
<- "\r\n"
<- "(dbx) "
-> "debug \n"
<- "debug \r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
#  Current session is "cxxtest".
#  Creating "/users/jos/.ddd/sessions/cxxtest/"...
#  Creating "/users/jos/.ddd/sessions/cxxtest/"...done.
#  Copying "/users/jos/.ddd/init" to "/users/jos/.ddd/sessions/cxxtest/init"...
#  Copying "/users/jos/.ddd/init" to "/users/jos/.ddd/sessions/cxxtest/init"...done.
#  Copying "/users/jos/.ddd/history" to "/users/jos/.ddd/sessions/cxxtest/history"...
#  Copying "/users/jos/.ddd/history" to "/users/jos/.ddd/sessions/cxxtest/history"...done.
-> "debug \n"
<- "d"
<- "e"
<- "b"
<- "u"
<- "g"
<- " "
<- "\r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
#  Saving session in "/users/jos/.ddd/sessions/cxxtest/init"...
-> "debug \n"
<- "d"
<- "e"
<- "b"
<- "u"
<- "g"
<- " "
<- "\r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
#  Saving session in "/users/jos/.ddd/sessions/cxxtest/init"...done.
-> "print add_threads\n"
<- "print add_threads\r\n"
<- "\r\n"
<- "\"add_threads\" is not defined or not active\r\n"
<- "(dbx) "
-> "print Tree::shared\n"
<- "print Tree::shared\r\n"
<- "print Tree::shared\r\n"
<- "          ^ syntax error\r\n"
<- "(dbx) "
-> "q\n"
<- "q\r\n"
#  Running DBX (pid 18375, tty /dev/ttyp4)...Exit 0.
#  Saving history in "/users/jos/.ddd/sessions/cxxtest/history"...
#  Saving history in "/users/jos/.ddd/sessions/cxxtest/history"...done.
#  Thanks for using DDD 1998-11-24!
[3 logflu <text/plain; US-ASCII (base64)>]
DDD 1998-11-24 (alphaev56-dec-osf4.0d), Copyright (C) 1998 TU Braunschweig.
Compiled with CC
Requires X11R6, Xt11R6, Motif 1.2.4 (OSF/Motif Version 1.2.4)
Includes DDD core, manual, app-defaults, Athena Panner
Built 1998-11-25 by Jochen Schuetze <jos@gbf.de>.
$  ddd fluent.4.4.7 -pid 19838
+  /bin/sh -c 'exec dbx '\''fluent.4.4.7'\'' '\''-pid'\'' '\''19838'\'''
#  Hello, world!
#  Starting DBX...
#  Enabling core dumps...
#  Enabling core dumps...done.
#  Running DBX (pid 19657, tty /dev/ttyp4)...
#  Current language: c/c++
<- "dbx version 3.11.10\n"
<- "Type \'help\' for help.\n"
<- "\n"
<- "thread 0x5 stopped at>*[__poll, 0x3ff801100c8] \t"
<- "beq\tr19, 0x3ff801100e0\n"
<- "(dbx) "
-> "sh stty -echo -onlcr\n"
<- "sh stty -echo -onlcr\r\n"
#  DBX is running in echo mode.
<- "(dbx) "
-> "set $page = 1\n"
<- "set $page = 1\r\n"
<- "(dbx) "
-> "frame\n"
<- "frame\r\n"
<- "frame\r\n"
<- "     ^ syntax error\r\n"
<- "(dbx) "
-> "func\n"
<- "func\r\n"
<- "__poll\r\n"
<- "(dbx) "
-> "dbxenv run_io\n"
<- "dbxenv run_io\r\n"
<- "dbxenv run_io\r\n"
<- "       ^ syntax error\r\n"
<- "(dbx) "
-> "print -r 4711\n"
<- "print -r 4711\r\n"
<- "print -r 4711\r\n"
<- "         ^ syntax error\r\n"
<- "(dbx) "
-> "where -h\n"
<- "where -h\r\n"
<- "where -h\r\n"
<- "      ^ syntax error\r\n"
<- "(dbx) "
-> "display\n"
<- "display\r\n"
<- "display\r\n"
<- "       ^ syntax error\r\n"
<- "(dbx) "
-> "clear\n"
<- "clear\r\n"
<- "clear\r\n"
<- "     ^ syntax error\r\n"
<- "(dbx) "
-> "help handler\n"
<- "help handler\r\n"
<- "\r\n"
<- "Invalid keyword handler\r\n"
<- "\r\n"
<- "(dbx) "
-> "pwd\n"
<- "pwd\r\n"
<- "\r\n"
<- "\"/usr/include/pwd.h\" not defined or not active\r\n"
<- "(dbx) "
-> "help setenv\n"
<- "help setenv\r\n"
<- "setenv name \"string\"\t       - set environment variable <name> to <string>\r\n"
<- "(dbx) "
-> "help edit\n"
<- "help edit\r\n"
<- "edit                           - invoke editor on current file\r\n"
<- "edit <file>                    - invoke editor on file\r\n"
<- "(dbx) "
-> "help make\n"
<- "help make\r\n"
<- "\r\n"
<- "Invalid keyword make\r\n"
<- "\r\n"
<- "(dbx) "
-> "help regs\n"
<- "help regs\r\n"
<- "\r\n"
<- "Invalid keyword regs\r\n"
<- "\r\n"
<- "(dbx) "
-> "print \"DDD\"\n"
<- "print \"DDD\"\r\n"
<- "DDD \r\n"
<- "(dbx) "
-> "help when\n"
<- "help when\r\n"
<- "when <exp> { <command_list> }  - when <exp> is true, execute command_list\r\n"
<- "when at <line>{<command_list>} - when reach <line>, execute command_list\r\n"
<- "when in <proc>{<command_list>} - when reach <proc>, execute command_list\r\n"
<- "(dbx) "
-> "delete 4711 4711\n"
<- "delete 4711 4711\r\n"
<- "delete 4711 4711\r\n"
<- "            ^ syntax error\r\n"
<- "(dbx) "
-> "help run\n"
<- "help run\r\n"
<- "run arg1 arg2 ... < f1 >& f2   - begin execution of the program\r\n"
<- "(dbx) "
-> "help givenfile\n"
<- "help givenfile\r\n"
<- "\r\n"
<- "Invalid keyword givenfile\r\n"
<- "\r\n"
<- "(dbx) "
-> "help cont\n"
<- "help cont\r\n"
<- "[n] cont                       - continue execution\r\n"
<- "[n] cont <signal>              - continue with signal\r\n"
<- "cont to <line>                 - continue until <line> is reached\r\n"
<- "\t\t\t\t(temporary breakpoint)\r\n"
<- "cont in <proc>                 - continue until <proc> is reached  (see above)\r\n"
<- "cont <signal> to <line>        - continue with signal until <line> (see above)\r\n"
<- "cont <signal> in <proc>        - continue with signal until <proc> (see above)\r\n"
<- "(dbx) "
-> "help examine\n"
<- "help examine\r\n"
<- "\r\n"
<- "Invalid keyword examine\r\n"
<- "\r\n"
<- "(dbx) "
-> "help rerun\n"
<- "help rerun\r\n"
<- "rerun                          - restart execution of the program\r\n"
<- "(dbx) "
-> "language\n"
<- "language\r\n"
<- "language\r\n"
<- "        ^ syntax error\r\n"
<- "(dbx) "
-> "sh pwd\n"
<- "sh pwd\r\n"
<- "/users/jos/misi/grohal/Sources\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "fluent.F\r\n"
<- "(dbx) "
-> "list\n"
<- "list\r\n"
<- "\t Source not available\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "(dbx) "
-> "list fluent.F:0\n"
<- "list fluent.F:0\r\n"
<- "\"F\" is not defined in fluent.fluent.fluent\r\n"
<- "(dbx) "
-> "debug \n"
<- "debug \r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
-> "sh stty -echo -onlcr\n"
<- "sh stty -echo -onlcr\r\n"
<- "(dbx) "
-> "# reset\n"
<- "# reset\r\n"
<- "# reset\r\n"
<- "       ^ syntax error\r\n"
<- "(dbx) "
-> "file\n"
<- "file\r\n"
<- "fluent.F\r\n"
<- "(dbx) "
-> "list\n"
<- "list\r\n"
<- "\t Source not available\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "(dbx) "
-> "debug \n"
<- "debug \r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
-> "help detach\n"
<- "help detach\r\n"
<- "detach [<exp>]\t\t\t- detach from process with pid <exp> or\r\n"
<- "\t\t\t\t  current process; process continues running\r\n"
<- "(dbx) "
#  Starting DBX...done.
#  Welcome to DDD 1998-11-24 "Nightsleeper" (alphaev56-dec-osf4.0d)
-> "help run\n"
<- "help run\r\n"
<- "run arg1 arg2 ... < f1 >& f2   - begin execution of the program\r\n"
<- "(dbx) "
-> "help step\n"
<- "help step\r\n"
<- "step <int>                     - single step n lines (assumes 1 for <int>)\r\n"
<- "(dbx) "
-> "help stepi\n"
<- "help stepi\r\n"
<- "stepi <exp>                    - single step <exp> assembly instructions\r\n"
<- "(dbx) "
-> "help next\n"
<- "help next\r\n"
<- "next <int>                     - step over next line n times (assumes 1)\r\n"
<- "(dbx) "
-> "help nexti\n"
<- "help nexti\r\n"
<- "nexti <exp>                    - step over next instruction <exp>times(see next)\r\n"
<- "(dbx) "
-> "help until\n"
<- "help until\r\n"
<- "\r\n"
<- "Invalid keyword until\r\n"
<- "\r\n"
<- "(dbx) "
-> "help cont\n"
<- "help cont\r\n"
<- "[n] cont                       - continue execution\r\n"
<- "[n] cont <signal>              - continue with signal\r\n"
<- "cont to <line>                 - continue until <line> is reached\r\n"
<- "\t\t\t\t(temporary breakpoint)\r\n"
<- "cont in <proc>                 - continue until <proc> is reached  (see above)\r\n"
<- "cont <signal> to <line>        - continue with signal until <line> (see above)\r\n"
<- "cont <signal> in <proc>        - continue with signal until <proc> (see above)\r\n"
<- "(dbx) "
-> "help signal\n"
<- "help signal\r\n"
<- "\r\n"
<- "Invalid keyword signal\r\n"
<- "\r\n"
<- "(dbx) "
-> "help kill\n"
<- "help kill\r\n"
<- "\r\n"
<- "Invalid keyword kill\r\n"
<- "\r\n"
<- "(dbx) "
-> "help up\n"
<- "help up\r\n"
<- "up <exp>                       - move up <exp> activation levels in the stack\r\n"
<- "(dbx) "
-> "help down\n"
<- "help down\r\n"
<- "down <exp>                     - move down <exp> activation levels in the stack\r\n"
<- "(dbx) "
#  Reading file "/users/jos/misi/grohal/Sources/user.f"...
#  Reading file "/users/jos/misi/grohal/Sources/user.f"...done.
#  File "/users/jos/misi/grohal/Sources/user.f" 7983 lines, 241890 characters
-> "list ustrup\n"
<- "list ustrup\r\n"
<- " "
<- " "
<- "7073  "
<- "      REAL E(1:1)\r\n"
<- " "
<- " "
<- "7074  "
<- "      REAL D(1:1)\r\n"
<- " "
<- " "
<- "7075  "
<- "      POINTER (PE,E)\r\n"
<- " "
<- " "
<- "7076  "
<- "      POINTER (PD,D)\r\n"
<- " "
<- " "
<- "7077  "
<- "      COMMON /FTURB/ PE,  PD\r\n"
<- ">"
<- " "
<- "7078  "
<- "      REAL SPCON(1:SPSIZE,1:NSPEC)\r\n"
<- " "
<- " "
<- "7079  "
<- "      POINTER (PSPCON,SPCON)\r\n"
<- " "
<- " "
<- "7080  "
<- "      COMMON /SPCONS/ PSPCON\r\n"
<- " "
<- " "
<- "7081  "
<- "      SAVE /SPCONS/\r\n"
<- " "
<- " "
<- "7082  "
<- "      REAL MYARAY(1:1)\r\n"
<- " "
<- " "
<- "7083  "
<- "      POINTER (PMYARY,  MYARAY)\r\n"
<- " "
<- " "
<- "7084  "
<- "      COMMON /MYCOMM/ PMYARY\r\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./user.f\r\n"
<- "(dbx) "
-> "print PJTADZ\n"
<- "print PJTADZ\r\n"
<- "0"
<- " \r\n"
<- "(dbx) "
-> "print PJTADD\n"
<- "print PJTADD\r\n"
<- "0 \r\n"
<- "(dbx) "
-> "print MENU\n"
<- "print MENU\r\n"
<- "0x1203c5a30 \r\n"
<- "(dbx) "
-> "print DEFOPT\n"
<- "print DEFOP"
<- "T"
<- "\r\n"
<- "0x1203c5930"
<- " \r\n"
<- "(dbx) "
-> "print IMENU\n"
<- "p"
<- "r"
<- "i"
<- "n"
<- "t"
<- " "
<- "I"
<- "M"
<- "E"
<- "N"
<- "U\r\n"
<- "\r\n"
<- "IMENU not active"
<- "\r\n"
<- "(dbx) "
-> "print THEN\n"
<- "print "
<- "T"
<- "H"
<- "E"
<- "N"
<- "\r\n"
<- "\r\n"
<- "\"THEN\" is not defined or not active"
<- "\r\n"
<- "(dbx) "
-> "print JOESCH\n"
<- "print JOESCH\r\n"
<- "\r\n"
<- "\"JOESCH\" is not defined or not active\r\n"
<- "(dbx) "
-> "print test\n"
<- "print test\r\n"
<- "\r\n"
<- "\"test\" is not defined or not active\r\n"
<- "(dbx) "
-> "print exp\n"
<- "print exp\r\n"
<- "666583023"
<- " \r\n"
<- "(dbx) "
#  Found "exp" in user.f:7539
-> "commands\n"
<- "commands\r\n"
<- "commands"
<- "\r\n"
<- "        ^ syntax error\r\n"
<- "(dbx) "
-> "file user.f\n"
<- "file user.f\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "(dbx) "
-> "stop at 7537\n"
<- "stop at 7537\r\n"
<- "[2] stop at \"user.f\":7537\r\n"
<- "(dbx) "
-> "status\n"
<- "status\r\n"
<- "[2] stop at \"user.f\":7537\r\n"
<- "\r\n"
<- "(dbx) "
-> "print MYLOFF\n"
<- "print MYLOFF\r\n"
<- "536867040"
<- " \r\n"
<- "(dbx) "
-> "cont\n"
<- "cont\r\n"
<- "[2] thread 0x5 stopped at   [ustrup:7537 ,0x1200a1098]"
<- " \t"
<- "ZAHL = 0.\n"
<- "(dbx) "
-> "file\n"
<- "f"
<- "i"
<- "l"
<- "e"
<- "\r\n"
<- "./user.f\r\n"
<- "(dbx) "
-> "status\n"
<- "s"
<- "t"
<- "a"
<- "t"
<- "u"
<- "s"
<- "\r\n"
<- "[2] "
<- "stop"
<- " at "
<- "\""
<- "u"
<- "s"
<- "e"
<- "r"
<- "."
<- "f"
<- "\""
<- ":"
<- "7537"
<- "\r\n"
<- "\r\n"
<- "(dbx) "
-> "debug \n"
<- "debug \r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
#  Current session is "fluent".
-> "debug \n"
<- "d"
<- "e"
<- "b"
<- "u"
<- "g"
<- " "
<- "\r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
#  Saving session in "/users/jos/.ddd/sessions/fluent/init"...
-> "debug \n"
<- "d"
<- "e"
<- "b"
<- "u"
<- "g"
<- " "
<- "\r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
#  Saving session in "/users/jos/.ddd/sessions/fluent/init"...done.
-> "debug \n"
<- "debug \r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
#  Current session is "fluent".
-> "debug \n"
<- "d"
<- "e"
<- "b"
<- "u"
<- "g"
<- " "
<- "\r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
-> "debug \n"
<- "d"
<- "e"
<- "b"
<- "u"
<- "g"
<- " "
<- "\r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
#  Saving session in "/users/jos/.ddd/sessions/fluent/init"...
-> "debug \n"
<- "d"
<- "e"
<- "b"
<- "u"
<- "g"
<- " "
<- "\r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
-> "debug \n"
<- "d"
<- "e"
<- "b"
<- "u"
<- "g"
<- " "
<- "\r\n"
<- "\r\n"
<- "\"debug\" is not defined\r\n"
<- "\r\n"
<- "(dbx) "
-> "print signal(6, 0)\n"
<- "p"
<- "r"
<- "i"
<- "n"
<- "t"
<- " "
<- "s"
<- "i"
<- "g"
<- "n"
<- "a"
<- "l"
<- "("
<- "6"
<- ","
<- " "
<- "0"
<- ")"
<- "\r\n"
<- "4395912737152"
<- " \n"
<- "(dbx) "
-> "cont 6\n"
<- "c"
<- "o"
<- "n"
<- "t"
<- " "
<- "6"
<- "\r\n"
<- "\n"
<- "Program exited with code 6"
<- "\n"
<- "(dbx) "
#  Saving session in "/users/jos/.ddd/sessions/fluent/init"...done.
-> "print CONTINUE\n"
<- "print CONTINUE\r\n"
<- "\r\n"
<- "\"CONTINUE\" is not defined or not active"
<- "\r\n"
<- "(dbx) "
-> "q\n"
<- "q\r\n"
#  Running DBX (pid 19657, tty /dev/ttyp4)...Exit 0.
#  Saving history in "/users/jos/.ddd/sessions/fluent/history"...
#  Saving history in "/users/jos/.ddd/sessions/fluent/history"...done.
#  Thanks for using DDD 1998-11-24!
