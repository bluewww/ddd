From hobelsbe@forwiss.uni-passau.de  Tue Aug  4 18:12:25 1998
Status: RO
X-VM-v5-Data: ([nil nil nil nil nil nil nil nil nil]
	["12291" "Tue" "4" "August" "1998" "18:12:22" "+0200" "Hobi" "hobelsbe@forwiss.uni-passau.de" "<35C732E6.280EC4F1@forwiss.uni-passau.de>" "384" "Re: Debug Sessions in Solaris DBX" "^From:" nil nil "8" "1998080416:12:22" "Debug Sessions in Solaris DBX" nil "<13767.11352.720512.2129@infbssts.ips.cs.tu-bs.de>" ("<35C70566.C4C35EC2@forwiss.uni-passau.de>" "<ogu33sonbd.fsf@infbssts.ips.cs.tu-bs.de>" "<35C716F3.D408A15C@forwiss.uni-passau.de>" "<13767.6156.125632.16569@infbssts.ips.cs.tu-bs.de>" "<35C71D1C.56C7658C@forwiss.uni-passau.de>" "<13767.8212.512904.44050@infbssts.ips.cs.tu-bs.de>" "<35C72A32.7513A866@forwiss.uni-passau.de>" "<13767.11352.720512.2129@infbssts.ips.cs.tu-bs.de>")]
	nil)
Received: from sauron.forwiss.uni-passau.de (sauron.forwiss.uni-passau.de [132.231.20.100]) by infbssys.ips.cs.tu-bs.de with ESMTP id SAA15381
  (8.8.8/IDA-1.6 for <zeller@gnu.org>); Tue, 4 Aug 1998 18:12:23 +0200
Received: from forwiss.uni-passau.de (bombadill.forwiss.uni-passau.de [132.231.20.16])
	by sauron.forwiss.uni-passau.de (8.8.8/8.8.8) with ESMTP id SAA24590
	for <zeller@gnu.org>; Tue, 4 Aug 1998 18:12:22 +0200 (MET DST)
Message-ID: <35C732E6.280EC4F1@forwiss.uni-passau.de>
Organization: Forwiss Passau
X-Mailer: Mozilla 4.5b1 [en] (X11; I; SunOS 5.5.1 sun4u)
X-Accept-Language: de,en
MIME-Version: 1.0
References: <35C70566.C4C35EC2@forwiss.uni-passau.de>
		<ogu33sonbd.fsf@infbssts.ips.cs.tu-bs.de>
		<35C716F3.D408A15C@forwiss.uni-passau.de>
		<13767.6156.125632.16569@infbssts.ips.cs.tu-bs.de>
		<35C71D1C.56C7658C@forwiss.uni-passau.de>
		<13767.8212.512904.44050@infbssts.ips.cs.tu-bs.de>
		<35C72A32.7513A866@forwiss.uni-passau.de> <13767.11352.720512.2129@infbssts.ips.cs.tu-bs.de>
Content-Type: multipart/mixed;
 boundary="------------93C788B121EA033F863B3DBC"
From: Hobi <hobelsbe@forwiss.uni-passau.de>
Sender: hobelsbe@forwiss.uni-passau.de
To: Andreas Zeller <zeller@gnu.org>
Subject: Re: Debug Sessions in Solaris DBX
Date: Tue, 04 Aug 1998 18:12:22 +0200

This is a multi-part message in MIME format.
--------------93C788B121EA033F863B3DBC
Content-Type: text/plain; charset=iso-8859-1
Content-Transfer-Encoding: 8bit

Hallo,

> Gut, dann machen wir das anders.  Schick mir (leider schon wieder :-)
> das Protokoll `~/.ddd/log' einer gewöhnlichen DDD-Sitzung, in der Du
> ein, zwei Haltepunkte in einer so abgeleiteten Datei setzt.  Dann will
> ich hier mal lokal testen, welche Dateinamen da zusammenkommen.

haengt hinten dran ...

die haltepunkte sind in
Regenschiene.c
und
Wetterschenkel.c
jeweils in der Funktion GeneriereTeileListe()

>
>
>
> P.S. Am 11./12.09. halte ich in Passau einen Vortrag über DDD -
>      im Rahmen eines Workshops über Graphenzeichnen...

super, werde ich mir anhoeren!

Gruss
    Hobi

--
--------------------------------------------------------------------------
Christian 'Hobi' Hobelsberger (Dipl.Inf.), EMail: cHobi@gmx.de
http://www.forwiss.uni-passau.de/~hobelsbe
POST: People of slow Transport



--------------93C788B121EA033F863B3DBC
Content-Type: text/plain; charset=us-ascii;
 name="log"
Content-Transfer-Encoding: 7bit
Content-Disposition: inline;
 filename="log"

DDD 3.0 (sparc-sun-solaris2.5.1), Copyright (C) 1998 TU Braunschweig.
Compiled with GCC 2.8.1, libstdc++ 2.8.1.1
Requires X11R5, Xt11R5, Motif 1.2.3 (OSF/Motif Version 1.2.3)
Includes DDD core, manual, app-defaults, XPM 3.4.10, Athena Panner
Built 1998-07-07 by X Window System Version 11 <x11@bombadill.forwiss.uni-passau.de>.
$  /public/x11/ddd-3.0/bin/ddd
+  /bin/sh -c 'exec dbx'
#  Hello, world!
#  Starting DBX...
#  Running DBX (pid 20012, tty /dev/pts/6)...
<- "(dbx) "
-> "sh stty -echo -onlcr\n"
<- "(dbx) "
-> "set $page = 1\n"
<- "warning: setting positional parameters; use `assign\' to set target process variable\n"
   "(dbx) "
-> "frame\n"
<- "dbx: program is not active\n"
<- "(dbx) "
-> "func\n"
<- "dbx: no program\n"
<- "(dbx) "
-> "dbxenv run_io\n"
<- "stdio\n"
<- "(dbx) "
-> "print -r 4711\n"
<- "dbx: warning: unknown language, \'c\' assumed\n"
<- "4711\n"
<- "(dbx) "
-> "where -h\n"
<- "dbx: program is not active\n"
<- "(dbx) "
-> "display\n"
<- "(dbx) "
-> "clear\n"
<- "dbx: warning: No executable here to clear events from\n"
   "(dbx) "
-> "help handler\n"
<- "A handler is created for each event that needs to be managed in a debugging\n"
   "session. The commands `trace\', `stop\', and `when\' create handlers. Each\n"
   "of these commands returns a number known as the `handler ID\' (denoted\n"
   "by <hid>). The `handler\', `status\', and `delete\' commands manipulate or\n"
   "give information about handlers in a generic fashion:\n"
   "\n"
   "handler -enable <hid> ...       # enable given handlers, `all\' for all\n"
   "handler -disable <hid> ...      # disable given handlers, `all\' for all\n"
   "handler -count <hid>            # print value of trip counter for given handler\n"
   "handler -count <hid> <newlimit> # set new count limit for given event\n"
   "handler -reset <hid>            # reset trip counter counter for given handler\n"
   "\n"
   "See also `help event\'.\n"
   "(dbx) "
-> "pwd\n"
<- "/home/projekte/auskunft/hobelsbe/entwickler2/Sources/Zerleger\n"
   "(dbx) "
-> "help setenv\n"
<- "setenv <name> <string> # Set environment variable <name> to <string>\n"
<- "(dbx) "
-> "help edit\n"
<- "edit                   # Edit the current file\n"
   "edit <filename>        # Edit the specified file <filename>\n"
   "edit <proc>            # Edit the file containing function or procedure <proc>\n"
   "\n"
   "`edit\' uses $EDITOR if dbx is not running under the debugger.  Otherwise,\n"
   "it sends a message to the debugger to display the appropriate file.  If the\n"
   "debugger was invoked with the `-editor\' option, the external editor which\n"
   "handles source display will be used, otherwise the source pane will be\n"
   "updated to display the requested file.\n"
   "(dbx) "
-> "help make\n"
<- "make is /usr/ccs/bin/make\n"
<- "(dbx) "
-> "help regs\n"
<- "regs is unknown\n"
<- "(dbx) "
-> "print \"DDD\"\n"
<- "\"DDD\" = \"DDD\"\n"
<- "(dbx) "
-> "help when\n"
<- "when at <line> { cmd; }         # Execute command(s) when <line> reached\n"
   "when in <proc> { cmd; }         # Execute command(s) when <proc> called\n"
   "`when\' has a general syntax as follows:\n"
   "        when <event-specification> [ <modifier> ] { <cmd> ... ; }\n"
   "When the specified event occurs, the <cmd>s are executed.\n"
   "For a list and the syntax of all events see `help event specification\'.\n"
   "For a general discussion of event management commands see `help events\'.\n"
<- "(dbx) "
-> "delete 4711 4711\n"
<- "dbx: warning: no such handler id 4711\n"
   "dbx: warning: no such handler id 4711\n"
   "(dbx) "
-> "help run\n"
<- "run                     # Begin executing the program with the current arguments\n"
   "run <args>              # Begin executing the program with new arguments\n"
   "                          See also `help rerun\' and `help runargs\'.\n"
<- "(dbx) "
-> "help givenfile\n"
<- "givenfile is unknown\n"
   "(dbx) "
-> "help cont\n"
<- "cont [sig <signo>] [<id>]            # Continue execution with signal <signo>\n"
   "cont at <line> [sig <signo>] <id>    # Continue execution at line <line> with\n"
   "                                       signal <signo>.  See `help continue\' for\n"
   "                                       dbx command language loop control.\n"
   "\n"
   "The <id>, if present, specifies which thread or LWP to continue.\n"
   "Default is `all\'. In the case of \'cont at\' the <id> is required.\n"
   "(dbx) "
-> "sh pwd\n"
<- "/home/projekte/auskunft/hobelsbe/entwickler2/Sources/Zerleger\n"
<- "(dbx) "
-> "file\n"
<- "dbx: no program\n"
   "(dbx) "
-> "list\n"
<- "dbx: warning: No source file\n"
   "(dbx) "
-> "status\n"
<- "(dbx) "
-> "debug \n"
<- "No program loaded\n"
   "(dbx) "
-> "dbxenv array_bounds_check on\n"
<- "(dbx) "
-> "dbxenv fix_verbose off\n"
<- "(dbx) "
-> "dbxenv follow_fork_inherit off\n"
<- "(dbx) "
-> "dbxenv locache_enable on\n"
<- "(dbx) "
-> "dbxenv mt_watchpoints off\n"
<- "(dbx) "
-> "dbxenv output_auto_flush on\n"
<- "(dbx) "
-> "dbxenv output_dynamic_type off\n"
<- "(dbx) "
-> "dbxenv output_pretty_print off\n"
<- "(dbx) "
-> "dbxenv output_short_file_name on\n"
<- "(dbx) "
-> "dbxenv overload_function on\n"
<- "(dbx) "
-> "dbxenv overload_operator on\n"
<- "(dbx) "
-> "dbxenv pop_auto_destruct on\n"
<- "(dbx) "
-> "dbxenv rtc_auto_continue off\n"
<- "(dbx) "
-> "dbxenv rtc_auto_suppress off\n"
<- "(dbx) "
-> "dbxenv rtc_biu_at_exit off\n"
<- "(dbx) "
-> "dbxenv run_setpgrp off\n"
<- "(dbx) "
-> "dbxenv run_autostart off\n"
<- "(dbx) "
-> "dbxenv scope_global_enums off\n"
<- "(dbx) "
-> "dbxenv scope_look_aside off\n"
<- "(dbx) "
-> "dbxenv stack_verbose on\n"
<- "(dbx) "
-> "dbxenv step_events off\n"
<- "(dbx) "
-> "dbxenv symbol_info_compression on\n"
<- "(dbx) "
-> "dbxenv input_case_sensitive true\n"
<- "(dbx) "
-> "dbxenv aout_cache_size 1\n"
<- "(dbx) "
-> "dbxenv follow_fork_mode parent\n"
<- "(dbx) "
-> "dbxenv run_io stdio\n"
<- "(dbx) "
-> "dbxenv output_base 10\n"
<- "(dbx) "
-> "dbxenv output_list_size 10\n"
<- "(dbx) "
-> "dbxenv output_max_string_length 512\n"
<- "(dbx) "
-> "dbxenv rtc_error_limit 1000\n"
<- "(dbx) "
-> "dbxenv run_pty \n"
<- "\n"
   "(dbx) "
-> "dbxenv session_log_file_name \n"
<- "\n"
   "(dbx) "
-> "dbxenv stack_max_size 100\n"
<- "(dbx) "
-> "dbxenv suppress_startup_message 3.01\n"
<- "(dbx) "
-> "dbxenv symbol_info_warnings -1\n"
<- "(dbx) "
-> "dbxenv trace_speed 0.50\n"
<- "(dbx) "
-> "# reset\n"
<- "(dbx) "
-> "file\n"
<- "dbx: no program\n"
   "(dbx) "
-> "list\n"
<- "dbx: warning: No source file\n"
   "(dbx) "
-> "status\n"
<- "(dbx) "
-> "display\n"
<- "(dbx) "
-> "debug \n"
<- "No program loaded\n"
   "(dbx) "
#  Starting DBX...done.
#  Welcome to DDD 3.0!
-> "debug Zerleger\n"
<- "Reading symbolic information for Zerleger\n"
<- "Reading symbolic information for rtld /usr/lib/ld.so.1\n"
<- "Reading symbolic information for libsocket.so.1\n"
<- "Reading symbolic information for libw.so.1\n"
<- "Reading symbolic information for libnsl.so.1\n"
<- "Reading symbolic information for libaio.so.1\n"
<- "Reading symbolic information for libdl.so.1\n"
<- "Reading symbolic information for libm.so.1\n"
<- "Reading symbolic information for libc.so.1\n"
<- "Reading symbolic information for libintl.so.1\n"
<- "Reading symbolic information for libmp.so.1\n"
<- "(dbx) "
-> "file\n"
<- "Zerleger.c\n"
<- "(dbx) "
-> "list\n"
<- "  679       char    *sUserHome = NULL;\n"
   "  680       boole   bLetzteUP = B_FALSE;\n"
   "  681       pUPListe = NULL;\n"
   "  682   \n"
   "  683   \n"
   "  684       /*  Globale Variablen initialisieren:  */\n"
   "  685       strcpy(sProgName, argv[0]);\n"
   "  686       *sLogFileName = \'\\0\';\n"
   "  687       *sIniFileName = \'\\0\';\n"
   "  688       fpLogFile = NULL;\n"
   "(dbx) "
-> "status\n"
<- "(dbx) "
-> "display\n"
<- "(dbx) "
#  Reading file "/home/projekte/auskunft/hobelsbe/entwickler2/Sources/Zerleger/Zerleger.c"...
#  Reading file "/home/projekte/auskunft/hobelsbe/entwickler2/Sources/Zerleger/Zerleger.c"...done.
#  File "/home/projekte/auskunft/hobelsbe/entwickler2/Sources/Zerleger/Zerleger.c" 892 lines, 37139 characters
-> "debug \n"
<- "Debugging: Zerleger \n"
   "(dbx) "
-> "file Regenschiene.c\n"
<- "(dbx) "
-> "status\n"
<- "(dbx) "
-> "stop in GeneriereTeileListe\n"
<- "(2) stop in `Zerleger`Regenschiene.c`GeneriereTeileListe\n"
   "(dbx) "
-> "status\n"
<- "(2) stop in `Zerleger`Regenschiene.c`GeneriereTeileListe\n"
   "(dbx) "
-> "list `Zerleger`Regenschiene.c`GeneriereTeileListe\n"
<- "  317   GeneriereTeileListe(Objekt *pObjekt, va_list argp)\n"
   "  318   {\n"
   "  319       /*  Message an Basisklasse weiterschicken  */\n"
   "  320       /*  wird von Wetterschenkel erledigt       */\n"
   "  321   \n"
   "  322       return (0);\n"
   "  323   \n"
   "  324   }  /*  Ende GeneriereTeileListe  */\n"
   "  325   \n"
   "  326   \n"
   "  327   \n"
   "(dbx) "
-> "file\n"
<- "Regenschiene.edit.c\n"
   "(dbx) "
-> "list main\n"
<- "  674       int     nErg, nI, nUP;\n"
   "  675       int     nReturnWert;\n"
   "  676       long     lPosiIdNext;\n"
   "  677       long     lPosiId;\n"
   "  678       IdListe pUPListe;\n"
   "  679       char    *sUserHome = NULL;\n"
   "  680       boole   bLetzteUP = B_FALSE;\n"
   "  681       pUPListe = NULL;\n"
   "  682   \n"
   "  683   \n"
   "  684       /*  Globale Variablen initialisieren:  */\n"
   "(dbx) "
-> "file\n"
<- "Zerleger.c\n"
   "(dbx) "
-> "file Wetterschenkel.c\n"
<- "(dbx) "
-> "status\n"
<- "(2) stop in `Zerleger`Regenschiene.c`GeneriereTeileListe\n"
<- "(dbx) "
-> "stop in GeneriereTeileListe\n"
<- "(3) stop in `Zerleger`Wetterschenkel.c`GeneriereTeileListe\n"
   "(dbx) "
-> "status\n"
<- "(2) stop in `Zerleger`Regenschiene.c`GeneriereTeileListe\n"
   "(3) stop in `Zerleger`Wetterschenkel.c`GeneriereTeileListe\n"
   "(dbx) "
-> "list `Zerleger`Wetterschenkel.c`GeneriereTeileListe\n"
<- "  324   /*  .   :   .   .   :   .   .   :   .   .   .   : */\n"
   "  325   \n"
   "  326   static int\n"
   "  327   GeneriereTeileListe(Objekt *pObjekt, va_list argp)\n"
   "  328   {\n"
   "  329     int             nStueckzahl             = va_arg(argp, int); \n"
   "  330     Objekt          *pUebergInstanzListElem = va_arg(argp, Objekt*);\n"
   "  331     Objekt          *pInstanzListe          = va_arg(argp, Objekt*);\n"
   "  332   \n"
   "  333     BauteilDaten              *pBauteilDaten;\n"
   "  334     SGObjektDaten             *pSGKlassenDaten;\n"
   "(dbx) "
-> "file\n"
<- "Wetterschenkel.edit.c\n"
   "(dbx) "
-> "status\n"
<- "(2) stop in `Zerleger`Regenschiene.c`GeneriereTeileListe\n"
   "(3) stop in `Zerleger`Wetterschenkel.c`GeneriereTeileListe\n"
   "(dbx) "
-> "status\n"
<- "(2) stop in `Zerleger`Regenschiene.c`GeneriereTeileListe\n"
   "(3) stop in `Zerleger`Wetterschenkel.c`GeneriereTeileListe\n"
   "(dbx) "
-> "quit\n"
#  DBX: EOF detected
#  Running DBX (pid 20012, tty /dev/pts/6)...Exit 0.
#  Saving history in "/home/forwiss/hobelsbe/.ddd/history"...
#  Saving history in "/home/forwiss/hobelsbe/.ddd/history"...done.
#  Thanks for using DDD 3.0!

--------------93C788B121EA033F863B3DBC--


