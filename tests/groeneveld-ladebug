From: Eildert Groeneveld <eg@tzv.fal.de>
Subject: Re: ladebug and ddd3.2
To: andreas.zeller@yoda.fmi.uni-passau.de
Date: Mon, 14 Feb 2000 11:44:04 +0100 (CET)

Now, that was a quick reply. Meanwhile, I succeeded to fill the
correct window by goinf through the OPen Source button. Would that be
a correct way?

please find the log file attached.

Greetings

Eildert Groeneveld

> Hi!
> 
> Eildert Groeneveld writes:
> > Hello Andreas,
> > we have a problem with the ladebug and ddd-3.2 in that we cannot
> > persuade ddd to show the sourc code.
> > Compilation with the current Compaq cfal-1.0-7
> > Alpha f90 compiler was done as
> > fort -g -ladebug convert.f90
> > ddd --ladebug a.out
> > 
> > produces in the commmand line window:
> > object file name: a.out 
> > Reading symbolic information ...done
> > (ladebug) list
> > 169 !
> >     170 !   To suppress all blanks in the statement, and then to place
> >     171 !   a blank on each side of =,  +, -, * and / (but not ** or
> > //), a
> >     172 !   blank after each ) and , and a blank before each (.
> >     173 !   No changes are made within character strings or FORMAT
> > statememts.
> >     174 !
> >     175       USE DATA
> >     176 !
> >     177       USE STATISTICS
> >     178 !
> > however the source window remains empty with no possibility to create
> > breakpoints.
> > 
> > what are we doing wrong?
> 
> Right now, nothing - it seems there are several ladebug flavors out
> there, and DDD can only handle some of them.  A `~/.ddd/log' file
> would help a lot in finding the trouble source.
> 
> Greetings,
> 
> Andreas
> 
> -- 
> Andreas Zeller     Universitaet Passau
>                    http://www.fmi.uni-passau.de/st/staff/zeller/
> 


-- 
Eildert Groeneveld
=========================================
Institute for
Animal Science and Animal Behaviour
Mariensee 31535 Neustadt Germany
Tel   : (49)(0)5034 871155
Fax   : (49)(0)5034 92579
www   : http://www.tzv.fal.de/~eg/ 
e-mail: eg@tzv.fal.de
=========================================
[2. /home2/eg/.ddd/log --- text/plain; log]...

GNU DDD 3.2 (alphaev6-unknown-linux-gnu)
Copyright (C) 1995-1999 Technische Universitaet Braunschweig, Germany.
Copyright (C) 1999-2000 Universitaet Passau, Germany.
Compiled with GCC egcs-2.91.66 19990314/Linux (egcs-1.1.2 release), GNU libc 2.1
Requires X11R6, Xt11R6, Motif 2.0 (GNU/LessTif Version 2.0 Release 0.89.9)
Includes DDD core, Manual, App defaults, XPM 3.4.11, Athena Panner
Built 2000-02-01 by root <root@astro.devel.redhat.com>.
$  ddd --debugger ladebug -I /home2/eg/vce_patchbranch/newvce/src -I /home2/eg/vce_patchbranch/newvce/src bin/vce_dbg
+  /bin/sh -c 'exec ladebug '\''-I'\'' '\''/home2/eg/vce_patchbranch/newvce/src'\'' '\''-I'\'' '\''/home2/eg/vce_patchbranch/newvce/src'\'' '\''bin/vce_dbg'\'''
#  Hello, world!
#  Starting Ladebug...
#  Warning: core dumps are disabled
#  Running Ladebug (pid 23323, tty /dev/pts/3)...
#  Current language: c/c++
<- "Welcome to the Ladebug Debugger Version 4.0-59\n"
   "------------------ \n"
   "object file name: bin/vce_dbg \n"
   "Reading symbolic information ..."
<- "done"
<- "(ladebug) "
-> "sh stty -echo -onlcr"

<- "(ladebug) "
-> "set $page = 1"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "(ladebug) "
-> "frame"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "frame\n"
   "    ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "func"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\n"
   "subroutine vce() in /home2/eg/vce_patchbranch/newvce/src/version.incl line No. 2:"
<- "      2 src_version = \'4.3.0\'\n"
   "(ladebug) "
-> "dbxenv run_io"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "dbxenv run_io\n"
   "            ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "print -r 4711"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "print -r 4711\n"
   "            ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "where -h"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "The \"where\" command has failed because there is no running program.\n"
   "(ladebug) "
-> "display"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "display\n"
   "      ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "clear"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "clear\n"
   "    ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "help handler"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Information about \"handler\" isn\'t available\n"
   "\n"
   "\n"
   "\n"
   "Welcome to the Ladebug debugger help system. \n"
   " \n"
   "To find out about:  \n"
   " \n"
   "        - starting up a program in Ladebug \n"
   "                enter \'help start\' \n"
   " \n"
   "        - stopping at a specific place in your program \n"
   "                enter \'help breakpoint\' \n"
   " \n"
   "        - making the program execute \n"
   "                enter \'help execution\' \n"
   " \n"
   "        - saving or cloning a snapshot of the current process \n"
   "                enter \'help snapshot\' \n"
   " \n"
   "        - determining the type or value of a program variable \n"
   "                enter \'help variable\' \n"
   " \n"
   "        - reading or writing a memory location \n"
   "                enter \'help memory\' \n"
   " \n"
   "        - reading or writing a register \n"
   "                enter \'help register\' \n"
   " \n"
   "        - showing the current call stack \n"
   "                enter \'help stack\' \n"
   " \n"
   "        - displaying the source text of your program \n"
   "                enter \'help listing\' \n"
   " \n"
   "        - listing all of the ladebug commands \n"
   "                enter \'help ladebug\' or \'help command\' \n"
   " \n"
   "To find out about all of the Ladebug commands, use \n"
   "\'help ladebug\' or \'help command\'.  To find out about  \n"
   "a specific command, use help, followed by the command  \n"
   "verb, such as \'help quit\'.\n"
   "(ladebug) "
-> "pwd"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\n"
   "pwd\n"
   "  ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "help setenv"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        setenv [<env_variable> [<value>]] \n"
   "\n"
   "Sets the value of the specified environment variable. If no variable \n"
   "is specified, the command displays the values of all environment \n"
   "variables. If a variable is specified but no value is specified, then \n"
   "the variable is set to NULL. \n"
   "\n"
   "This command is not for the current debuggee\'s environment, but for \n"
   "the environment of any debuggees subsequently created with fork(2) or \n"
   "with subsequent \'run\' or \'rerun\' commands. \n"
   "\n"
   "\'export\' and \'setenv\' are synonyms. \n"
   "\n"
   "See the Ladebug Debugger Manual for more information on commands that \n"
   "manipulate the environment of subsequent debuggees. \n"
   "(ladebug) "
-> "help edit"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        edit [<filename>] \n"
   "\n"
   "Use the \'edit\' command without an argument to bring up an \n"
   "editor on the current source.  Specify a file to bring up \n"
   "an editor on the specified file. \n"
   "\n"
   "Ladebug evaluates the EDITOR environment variable to pick \n"
   "an editor.  It will default to \'vi\'. \n"
   "(ladebug) "
-> "help make"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Information about \"make\" isn\'t available\n"
   "\n"
   "\n"
   "\n"
   "Welcome to the Ladebug debugger help system. \n"
   " \n"
   "To find out about:  \n"
   " \n"
   "        - starting up a program in Ladebug \n"
   "                enter \'help start\' \n"
   " \n"
   "        - stopping at a specific place in your program \n"
   "                enter \'help breakpoint\' \n"
   " \n"
   "        - making the program execute \n"
   "                enter \'help execution\' \n"
   " \n"
   "        - saving or cloning a snapshot of the current process \n"
   "                enter \'help snapshot\' \n"
   " \n"
   "        - determining the type or value of a program variable \n"
   "                enter \'help variable\' \n"
   " \n"
   "        - reading or writing a memory location \n"
   "                enter \'help memory\' \n"
   " \n"
   "        - reading or writing a register \n"
   "                enter \'help register\' \n"
   " \n"
   "        - showing the current call stack \n"
   "                enter \'help stack\' \n"
   " \n"
   "        - displaying the source text of your program \n"
   "                enter \'help listing\' \n"
   " \n"
   "        - listing all of the ladebug commands \n"
   "                enter \'help ladebug\' or \'help command\' \n"
   " \n"
   "To find out about all of the Ladebug commands, use \n"
   "\'help ladebug\' or \'help command\'.  To find out about  \n"
   "a specific command, use help, followed by the command  \n"
   "verb, such as \'help quit\'.\n"
   "(ladebug) "
-> "help regs"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Information about \"regs\" isn\'t available\n"
   "\n"
   "\n"
   "\n"
   "Welcome to the Ladebug debugger help system. \n"
   " \n"
   "To find out about:  \n"
   " \n"
   "        - starting up a program in Ladebug \n"
   "                enter \'help start\' \n"
   " \n"
   "        - stopping at a specific place in your program \n"
   "                enter \'help breakpoint\' \n"
   " \n"
   "        - making the program execute \n"
   "                enter \'help execution\' \n"
   " \n"
   "        - saving or cloning a snapshot of the current process \n"
   "                enter \'help snapshot\' \n"
   " \n"
   "        - determining the type or value of a program variable \n"
   "                enter \'help variable\' \n"
   " \n"
   "        - reading or writing a memory location \n"
   "                enter \'help memory\' \n"
   " \n"
   "        - reading or writing a register \n"
   "                enter \'help register\' \n"
   " \n"
   "        - showing the current call stack \n"
   "                enter \'help stack\' \n"
   " \n"
   "        - displaying the source text of your program \n"
   "                enter \'help listing\' \n"
   " \n"
   "        - listing all of the ladebug commands \n"
   "                enter \'help ladebug\' or \'help command\' \n"
   " \n"
   "To find out about all of the Ladebug commands, use \n"
   "\'help ladebug\' or \'help command\'.  To find out about  \n"
   "a specific command, use help, followed by the command  \n"
   "verb, such as \'help quit\'.\n"
   "(ladebug) "
-> "print \"DDD\""
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "DDD\n"
   "(ladebug) "
-> "help when"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        when [quiet] <detector> \n"
   "    \t     [thread <thread-id> {,<thread-id>} ] \n"
   "    \t     [if <conditional-expression>] \n"
   "             [<command list>] \n"
   "\n"
   "\'when\' creates a breakpoint which executes the commands in <command list>\n"
   "(if given) when the detector is triggered and both thread and if\n"
   "conditions (if given) evaluate to true. The difference between \'stop\'\n"
   "and \'when\' is that a breakpoint created using \'stop\' suspends the execution\n"
   "when hit whereas one created using \'when\' does not.\n"
   "\n"
   "Enter \'help stop\' at the prompt for details on how to create a breakpoint.\n"
   "\n"
   "(ladebug) "
-> "delete 4711 4711"
n"
   "delete 4711 4711\n"
   "               ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "help run"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "\n"
   "        run [<program arguments>] [<io redirection>] \n"
   "        rerun [<program arguments>] [<io redirection>] \n"
   "\n"
   "Use the \'run\' and \'rerun\' commands to start program execution. \n"
   "Enter program flags, options, and input and output redirections \n"
   "as arguments. If the \'rerun\' command is specified without \n"
   "arguments, the arguments entered with the previous \'run\' \n"
   "command are used.  If the last modification time and/or \n"
   "size of the binary file or any of the shared objects used \n"
   "by the binary file has changed since the last \'run\' command \n"
   "was issued,  Ladebug automatically rereads the symbol \n"
   "table information.  If this happens, the old breakpoint \n"
   "settings may no longer be valid after the new symbol table \n"
   "information is read. \n"
   "(ladebug) "
-> "help givenfile"
n"
   "Information about \"givenfile\" isn\'t available\n"
   "\n"
   "\n"
   "\n"
   "Welcome to the Ladebug debugger help system. \n"
   " \n"
   "To find out about:  \n"
   " \n"
   "        - starting up a program in Ladebug \n"
   "                enter \'help start\' \n"
   " \n"
   "        - stopping at a specific place in your program \n"
   "                enter \'help breakpoint\' \n"
   " \n"
   "        - making the program execute \n"
   "                enter \'help execution\' \n"
   " \n"
   "        - saving or cloning a snapshot of the current process \n"
   "                enter \'help snapshot\' \n"
   " \n"
   "        - determining the type or value of a program variable \n"
   "                enter \'help variable\' \n"
   " \n"
   "        - reading or writing a memory location \n"
   "                enter \'help memory\' \n"
   " \n"
   "        - reading or writing a register \n"
   "                enter \'help register\' \n"
   " \n"
   "        - showing the current call stack \n"
   "                enter \'help stack\' \n"
   " \n"
   "        - displaying the source text of your program \n"
   "                enter \'help listing\' \n"
   " \n"
   "        - listing all of the ladebug commands \n"
   "                enter \'help ladebug\' or \'help command\' \n"
   " \n"
   "To find out about all of the Ladebug commands, use \n"
   "\'help ladebug\' or \'help command\'.  To find out about  \n"
   "a specific command, use help, followed by the command  \n"
   "verb, such as \'help quit\'.\n"
   "(ladebug) "
-> "help cont"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        cont [<signal>] [to <line_number>] \n"
   "        cont [in <function>] \n"
   "        <number_of_times> cont [<signal>] \n"
   "\n"
   "Use the \'cont\' command without a parameter value to resume program \n"
   "execution until a breakpoint, a signal, an error, or the end of \n"
   "the program is encountered.  Specify a signal parameter value to send \n"
   "an operating system signal to the program continuing execution. \n"
   "Specify a to line_number parameter value to halt program execution \n"
   "when that line number is reached. \n"
   "\n"
   "When you use the \'cont\' commmand, Ladebug resumes execution of the \n"
   "entire process. \n"
   "\n"
   "The signal parameter value can be either a signal number or a \n"
   "string name (for example, SIGSEGV).  The default is 0, which \n"
   "allows the program to continue execution without specifying a \n"
   "signal.  If you specify a signal parameter value, the program \n"
   "continues execution with that signal. \n"
   "\n"
   "The \'to line_number\' parameter value is used to resume execution and \n"
   "then halt when the specified source line is reached. \n"
   "\n"
   "The form of the optional line_number argument must be one of the \n"
   "following: \n"
   "\t- line_number, a positive numeric, which indicates the \n"
   "           line number of the current source file where execution \n"
   "           is to be halted \n"
   "        - \"filename\":line_number, which explicitly identifies both \n"
   " \t  the source file and the line number where execution \n"
   "          is to be halted. \n"
   "\n"
   "If the optional function name is provided, execution will be halted \n"
   "when that function is reached.  This form of the \'cont\' command does \n"
   "not support signals.  If the function name is overloaded, the user is \n"
   "prompted with a choice of overloaded function names or \'none of the above\'. \n"
   "Depending on user choice, program execution continues until the \n"
   "specified function is reached or warns the user that no breakpoint is set.\n"
   "If the \'none of the above\' option is specified, program execution returns \n"
   "to the \'ladebug\' prompt. \n"
   "\n"
   "When <number_of_times> is specified, Ladebug will ignore the next \n"
   "<number_of_times> breakpoints, and stop at the breakpoint that occurs \n"
   "at <number_of_times>+1.\n"
   "(ladebug) "
-> "help examine"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Information about \"examine\" isn\'t available\n"
   "\n"
   "\n"
   "\n"
   "Welcome to the Ladebug debugger help system. \n"
   " \n"
   "To find out about:  \n"
   " \n"
   "        - starting up a program in Ladebug \n"
   "                enter \'help start\' \n"
   " \n"
   "        - stopping at a specific place in your program \n"
   "                enter \'help breakpoint\' \n"
   " \n"
   "        - making the program execute \n"
   "                enter \'help execution\' \n"
   " \n"
   "        - saving or cloning a snapshot of the current process \n"
   "                enter \'help snapshot\' \n"
   " \n"
   "        - determining the type or value of a program variable \n"
   "                enter \'help variable\' \n"
   " \n"
   "        - reading or writing a memory location \n"
   "                enter \'help memory\' \n"
   " \n"
   "        - reading or writing a register \n"
   "                enter \'help register\' \n"
   " \n"
   "        - showing the current call stack \n"
   "                enter \'help stack\' \n"
   " \n"
   "        - displaying the source text of your program \n"
   "                enter \'help listing\' \n"
   " \n"
   "        - listing all of the ladebug commands \n"
   "                enter \'help ladebug\' or \'help command\' \n"
   " \n"
   "To find out about all of the Ladebug commands, use \n"
   "\'help ladebug\' or \'help command\'.  To find out about  \n"
   "a specific command, use help, followed by the command  \n"
   "verb, such as \'help quit\'.\n"
   "(ladebug) "
-> "help rerun"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "\n"
   "        run [<program arguments>] [<io redirection>] \n"
   "        rerun [<program arguments>] [<io redirection>] \n"
   "\n"
   "Use the \'run\' and \'rerun\' commands to start program execution. \n"
   "Enter program flags, options, and input and output redirections \n"
   "as arguments. If the \'rerun\' command is specified without \n"
   "arguments, the arguments entered with the previous \'run\' \n"
   "command are used.  If the last modification time and/or \n"
   "size of the binary file or any of the shared objects used \n"
   "by the binary file has changed since the last \'run\' command \n"
   "was issued,  Ladebug automatically rereads the symbol \n"
   "table information.  If this happens, the old breakpoint \n"
   "settings may no longer be valid after the new symbol table \n"
   "information is read. \n"
   "(ladebug) "
-> "language"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "language\n"
   "       ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "sh pwd"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "/home2/eg/vce_patchbranch/newvce\n"
   "(ladebug) "
-> "file"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\n"
   "/home2/eg/vce_patchbranch/newvce/src/version.incl\n"
   "(ladebug) "
-> "list"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "      3 os_version = \'Linux 2.2.14 alpha\'\n"
   "      4 compile_date = \'14-Feb-2000 @ 11:24:05\'\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "(ladebug) "
-> "debug "
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "debug \n"
   "     ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "# reset"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "(ladebug) "
-> "file"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\n"
   "/home2/eg/vce_patchbranch/newvce/src/version.incl\n"
   "(ladebug) "
-> "list"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\n"
   "(File /home2/eg/vce_patchbranch/newvce/src/version.incl has only 4 lines; the current line number is 5)\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "(ladebug) "
-> "setenv TERM dumb"

<- "(ladebug) "
-> "debug "
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "debug \n"
   "     ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "help detach"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        detach [process_id_list] \n"
   "\n"
   "Use the \'detach\' command to detach from a running process you specify \n"
   "from the process ID list.  Specifying a process ID and detaching from \n"
   "the process disables your ability to debug the process.  If you do not \n"
   "specify a process ID from the list, Ladebug detaches from the \n"
   "current process. \n"
   "(ladebug) "
#  Starting Ladebug...done.
#  Welcome to DDD 3.2 "Man Ray" (alphaev6-unknown-linux-gnu)
-> "help run"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "\n"
   "        run [<program arguments>] [<io redirection>] \n"
   "        rerun [<program arguments>] [<io redirection>] \n"
   "\n"
   "Use the \'run\' and \'rerun\' commands to start program execution. \n"
   "Enter program flags, options, and input and output redirections \n"
   "as arguments. If the \'rerun\' command is specified without \n"
   "arguments, the arguments entered with the previous \'run\' \n"
   "command are used.  If the last modification time and/or \n"
   "size of the binary file or any of the shared objects used \n"
   "by the binary file has changed since the last \'run\' command \n"
   "was issued,  Ladebug automatically rereads the symbol \n"
   "table information.  If this happens, the old breakpoint \n"
   "settings may no longer be valid after the new symbol table \n"
   "information is read. \n"
   "(ladebug) "
-> "help step"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        step [<expression>]\n"
   "\n"
   "Use the \'next\' and \'step\' commands to execute a line of source \n"
   "code.  When the next line to be executed contains a function call, \n"
   "the \'next\' command executes the function being called and returns \n"
   "to the line immediately after the function call. The \'step\' \n"
   "command steps into the function and executes only the first line \n"
   "of the function. \n"
   "\n"
   "For multithreaded applications, use these commands to step the \n"
   "current thread while putting all other threads on hold. \n"
   "\n"
   "If the optional <expression> argument is supplied, Ladebug will \n"
   "evaluate the number of times to execute the command.  The expression \n"
   "can be any expression that is valid within the current context. \n"
   "(ladebug) "
-> "help stepi"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "\n"
   "        stepi [<expression>]\n"
   "\n"
   "Use the \'stepi\' command and the \'nexti\' command to execute a \n"
   "machine instruction. When the instruction contains a function call, \n"
   "the \'stepi\' command steps into the function being called, and the \n"
   "\'nexti\' command executes the function being called. \n"
   "\n"
   "For multithreaded applications, use these commands to step the \n"
   "current thread while putting all other threads on hold. \n"
   "\n"
   "If the optional <expression> argument is supplied, Ladebug will \n"
   "evaluate the number of times to execute the command.  The expression \n"
   "can be any expression that is valid within the current context. \n"
   "(ladebug) "
-> "help next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        next [<expression>] \n"
   "\n"
   "Use the \'next\' and \'step\' commands to execute a line of source \n"
   "code.  When the next line to be executed contains a function call, \n"
   "the \'next\' command executes the function being called and returns \n"
   "to the line immediately after the function call.  The \'step\' \n"
   "command executes only the first line of the function. \n"
   "\n"
   "For multithreaded applications, use these commands to step the \n"
   "current thread while putting all other threads on hold. \n"
   "\n"
   "If the optional <expression> argument is supplied, Ladebug will \n"
   "evaluate the number of times to execute the command.  The expression \n"
   "can be any expression that is valid within the current context. \n"
   "(ladebug) "
-> "help nexti"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "\n"
   "        nexti [<expression>] \n"
   "\n"
   "Use the \'stepi\' command and the \'nexti\' command to execute a \n"
   "machine instruction.  When the instruction contains a function \n"
   "call, the \'stepi\' command steps into the function being called, \n"
   "and the \'nexti\' command executes the function being called. \n"
   "\n"
   "For multithreaded applications, use these commands to step the \n"
   "current thread while putting all other threads on hold. \n"
   "\n"
   "If the optional <expression> argument is supplied, Ladebug will \n"
   "evaluate the number of times to execute the command.  The expression \n"
   "can be any expression that is valid within the current context. \n"
   "(ladebug) "
-> "help until"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Information about \"until\" isn\'t available\n"
   "\n"
   "\n"
   "\n"
   "Welcome to the Ladebug debugger help system. \n"
   " \n"
   "To find out about:  \n"
   " \n"
   "        - starting up a program in Ladebug \n"
   "                enter \'help start\' \n"
   " \n"
   "        - stopping at a specific place in your program \n"
   "                enter \'help breakpoint\' \n"
   " \n"
   "        - making the program execute \n"
   "                enter \'help execution\' \n"
   " \n"
   "        - saving or cloning a snapshot of the current process \n"
   "                enter \'help snapshot\' \n"
   " \n"
   "        - determining the type or value of a program variable \n"
   "                enter \'help variable\' \n"
   " \n"
   "        - reading or writing a memory location \n"
   "                enter \'help memory\' \n"
   " \n"
   "        - reading or writing a register \n"
   "                enter \'help register\' \n"
   " \n"
   "        - showing the current call stack \n"
   "                enter \'help stack\' \n"
   " \n"
   "        - displaying the source text of your program \n"
   "                enter \'help listing\' \n"
   " \n"
   "        - listing all of the ladebug commands \n"
   "                enter \'help ladebug\' or \'help command\' \n"
   " \n"
   "To find out about all of the Ladebug commands, use \n"
   "\'help ladebug\' or \'help command\'.  To find out about  \n"
   "a specific command, use help, followed by the command  \n"
   "verb, such as \'help quit\'.\n"
   "(ladebug) "
-> "help cont"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        cont [<signal>] [to <line_number>] \n"
   "        cont [in <function>] \n"
   "        <number_of_times> cont [<signal>] \n"
   "\n"
   "Use the \'cont\' command without a parameter value to resume program \n"
   "execution until a breakpoint, a signal, an error, or the end of \n"
   "the program is encountered.  Specify a signal parameter value to send \n"
   "an operating system signal to the program continuing execution. \n"
   "Specify a to line_number parameter value to halt program execution \n"
   "when that line number is reached. \n"
   "\n"
   "When you use the \'cont\' commmand, Ladebug resumes execution of the \n"
   "entire process. \n"
   "\n"
   "The signal parameter value can be either a signal number or a \n"
   "string name (for example, SIGSEGV).  The default is 0, which \n"
   "allows the program to continue execution without specifying a \n"
   "signal.  If you specify a signal parameter value, the program \n"
   "continues execution with that signal. \n"
   "\n"
   "The \'to line_number\' parameter value is used to resume execution and \n"
   "then halt when the specified source line is reached. \n"
   "\n"
   "The form of the optional line_number argument must be one of the \n"
   "following: \n"
   "\t- line_number, a positive numeric, which indicates the \n"
   "           line number of the current source file where execution \n"
   "           is to be halted \n"
   "        - \"filename\":line_number, which explicitly identifies both \n"
   " \t  the source file and the line number where execution \n"
   "          is to be halted. \n"
   "\n"
   "If the optional function name is provided, execution will be halted \n"
   "when that function is reached.  This form of the \'cont\' command does \n"
   "not support signals.  If the function name is overloaded, the user is \n"
   "prompted with a choice of overloaded function names or \'none of the above\'. \n"
   "Depending on user choice, program execution continues until the \n"
   "specified function is reached or warns the user that no breakpoint is set.\n"
   "If the \'none of the above\' option is specified, program execution returns \n"
   "to the \'ladebug\' prompt. \n"
   "\n"
   "When <number_of_times> is specified, Ladebug will ignore the next \n"
   "<number_of_times> breakpoints, and stop at the breakpoint that occurs \n"
   "at <number_of_times>+1.\n"
   "(ladebug) "
-> "help signal"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Information about \"signal\" isn\'t available\n"
   "\n"
   "\n"
   "\n"
   "Welcome to the Ladebug debugger help system. \n"
   " \n"
   "To find out about:  \n"
   " \n"
   "        - starting up a program in Ladebug \n"
   "                enter \'help start\' \n"
   " \n"
   "        - stopping at a specific place in your program \n"
   "                enter \'help breakpoint\' \n"
   " \n"
   "        - making the program execute \n"
   "                enter \'help execution\' \n"
   " \n"
   "        - saving or cloning a snapshot of the current process \n"
   "                enter \'help snapshot\' \n"
   " \n"
   "        - determining the type or value of a program variable \n"
   "                enter \'help variable\' \n"
   " \n"
   "        - reading or writing a memory location \n"
   "                enter \'help memory\' \n"
   " \n"
   "        - reading or writing a register \n"
   "                enter \'help register\' \n"
   " \n"
   "        - showing the current call stack \n"
   "                enter \'help stack\' \n"
   " \n"
   "        - displaying the source text of your program \n"
   "                enter \'help listing\' \n"
   " \n"
   "        - listing all of the ladebug commands \n"
   "                enter \'help ladebug\' or \'help command\' \n"
   " \n"
   "To find out about all of the Ladebug commands, use \n"
   "\'help ladebug\' or \'help command\'.  To find out about  \n"
   "a specific command, use help, followed by the command  \n"
   "verb, such as \'help quit\'.\n"
   "(ladebug) "
-> "help kill"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        kill \n"
   "\n"
   "Use the \'kill\' command to terminate the program process leaving \n"
   "the debugger running.  When a process terminates, any breakpoints \n"
   "and traces previously set are retained.  You can later rerun the \n"
   "program. \n"
   "(ladebug) "
-> "help up"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        up [<integer>] \n"
   "\n"
   "Use the \'up\' command or the \'down\' command without an argument to change the \n"
   "function scope to the function located one level up or down the stack.  \n"
   "\n"
   "Enter a number argument to change the function scope to the function \n"
   "up or down the specified number of levels. If the number of levels \n"
   "exceeds the number of active functions on the stack, the function \n"
   "scope moves up or down as many levels as possible and the debugger \n"
   "issues a warning message. \n"
   "\n"
   "When the function scope changes, the debugger displays the source line \n"
   "corresponding to the last point of execution in that function. \n"
   "(ladebug) "
-> "help down"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "\n"
   "        down [<integer>] \n"
   "\n"
   "Use the \'up\' command or the \'down\' command without an argument to \n"
   "change the function scope to the function located one level up or \n"
   "down the stack. \n"
   "\n"
   "Enter a number argument to change the function scope to the \n"
   "function up or down the specified number of levels.  If the number \n"
   "of levels exceeds the number of active functions on the stack, \n"
   "the function scope moves up or down as many levels as possible \n"
   "and the debugger issues a warning message. \n"
   "\n"
   "When the function scope changes, the debugger displays the source \n"
   "line corresponding to the last point of execution in the function.\n"
   "(ladebug) "
#  Filtering files...
#  Filtering files...done.
#  Open Source is an idea whose time has finally come.  See http://www.opensource.org/.
-> "debug "
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "debug \n"
   "     ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
#  Filtering files...
#  Filtering files...done.
#  Filtering files...
#  Filtering files...done.
#  Filtering files...
#  Filtering files...done.
#  Filtering files...
#  Filtering files...done.
#  Reading file "/home2/eg/vce_patchbranch/newvce/src/fpp/vce.f90"...
#  Reading file "/home2/eg/vce_patchbranch/newvce/src/fpp/vce.f90"...done.
#  File "/home2/eg/vce_patchbranch/newvce/src/fpp/vce.f90" 1614 lines, 57282 characters
#  Setting buttons...
#  Setting buttons...done.
-> "print iargc"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"iargc\" is not defined.\n"
   "Error: no value for iargc\n"
   "(ladebug) "
-> "commands"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "commands\n"
   "       ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "print basic_data"
n"
   "Symbol \"basic_data\" is not defined.\n"
   "Error: no value for basic_data\n"
   "(ladebug) "
-> "print use"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"use\" is not defined.\n"
   "Error: no value for use\n"
   "(ladebug) "
-> "print interfaces"
n"
   "Symbol \"interfaces\" is not defined.\n"
   "Error: no value for interfaces\n"
   "(ladebug) "
-> "print aux_routines"
n"
   "Symbol \"aux_routines\" is not defined.\n"
   "Error: no value for aux_routines\n"
   "(ladebug) "
-> "file vce.f90"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "(ladebug) "
-> "stop at 131"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "[#1: stop at \"fpp/vce.f90\":131 ]\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "(ladebug) "
#  Starting execution window...
+  /bin/sh -c 'tmp=${TMPDIR-/tmp}/ddd$$; export tmp; trap "rm -f $tmp" 0; trap '\''exit 1'\'' 1 2 15;  '\''echo `tty` $$ $TERM $WINDOWID >$tmp; trap "" 2; while true; do sleep 3600; done'\'' >/dev/null </dev/null 2>&1 & while test ! -s $tmp; do sleep 1; done; cat $tmp'
#  Starting execution window...canceled.
-> "setenv TERM dumb"
n"
   "(ladebug) "
-> "rerun "
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "[1] stopped at [subroutine vce():131 0x12007e680]\t"
<- "    131   page_len = 65"
<- "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "(ladebug) "
-> "print private"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "private\" is not defined.\n"
   "Error: no value for private"
<- "(ladebug) "
-> "print $"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "p"
<- "rint $\n"
   "      ^"
<- ""
<- "Unable to parse input as legal command or Fortran expression."
<- "(ladebug) "
-> "print lu"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "30"
<- "(ladebug) "
-> "print jhju"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "Symbol \""
<- "jhju\" is not defined.\n"
   "Error: no value for jhju"
<- "(ladebug) "
-> "print page_len"
<- "\033[J"
<- " \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "0"
<- "(ladebug) "
-> "step"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():132 0x12007e68c]\t"
<- "    132   line_len = 75\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "(ladebug) "
-> "step"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():134 0x12007e698]\t"
<- "    134   comment (1) =        \' ************************************************\'\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "(ladebug) "
-> "step"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():135 0x12007e6c0]\t"
<- "    135   comment (2) = mitte (\' *                                              *\',\'VCE4\')\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "(ladebug) "
-> "print comment"
<- "\033[J"
<- " \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
-> "print comment"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "(ladebug) "
-> "print iargc"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"iargc\" is not defined.\n"
   "Error: no value for iargc\n"
   "(ladebug) "
-> "print Select"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"Select\" is not defined.\n"
   "Error: no value for Select\n"
   "(ladebug) "
-> "print Case"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"Case\" is not defined.\n"
   "Error: no value for Case\n"
   "(ladebug) "
-> "file vce.f90"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "(ladebug) "
-> "stop at 146"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "[#2: stop at \"fpp/vce.f90\":146 ]\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "(ladebug) "
-> "when at 146 {  }"
n"
   "when at 146 {  }\n"
   "               ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }\n"
   "(ladebug) "
-> "file vce.f90"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }\n"
   "(ladebug) "
-> "stop at 157"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "[#3: stop at \"fpp/vce.f90\":157 ]\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "print addr_incr"
n"
   "(0) Referencing a NULL object\n"
   "\n"
   "(ladebug) "
-> "cont"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "[2] stopped at [subroutine vce():147 0x12007e940]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- ""
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "print i"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "0"
<- "(ladebug) "
-> "print do"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "Symbol \""
<- "do\" is not defined.\n"
   "Error: no value for do"
<- "(ladebug) "
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():148 0x12007e954]\t"
<- "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "next"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C"
<- "\033[D\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "  ************************************************"
<- "stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():148 0x12007e954]\t"
<- "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "  *                     VCE4                     *"
<- "stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():148 0x12007e954]\t"
<- "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "print line_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "75"
<- "(ladebug) "
-> "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
-> "func"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\n"
   "subroutine vce() in fpp/vce.f90 line No. 148:\n"
   "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> ""
<- ""
<- "subroutine vce() in fpp/vce.f90 line No. 148:"
<- "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Creating display...
#  Creating display...done.
#  Display 1: comment (enabled, scope     )
#  Display 1: comment (enabled, scope     )
-> "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "65"
<- "(ladebug) "
-> "func"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\n"
   "subroutine vce() in fpp/vce.f90 line No. 148:\n"
   "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> ""
<- "\n"
   "subroutine vce() in fpp/vce.f90 line No. 148:\n"
   "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "print page_len"
n"
   "65\n"
   "(ladebug) "
#  Creating display...
#  Creating display...done.
#  Display 2: page_len (enabled, scope     )
#  Display 2: page_len (enabled, scope     )
-> "print pfile"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"pfile\" is not defined.\n"
   "Error: no value for pfile\n"
   "(ladebug) "
-> "print pfile"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"pfile\" is not defined.\n"
   "Error: no value for pfile\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }\n"
   "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }\n"
   "(ladebug) "
#  Display 2: page_len (enabled, scope     )
-> "print read_kw"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"read_kw\" is not defined.\n"
   "Error: no value for read_kw\n"
   "(ladebug) "
-> "print call"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"call\" is not defined.\n"
   "Error: no value for call\n"
   "(ladebug) "
-> "print *pfile"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "print *pfile\n"
   "      ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }\n"
   "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }\n"
   "(ladebug) "
#  Display 2: page_len (enabled, scope     )
-> "print stop"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"stop\" is not defined.\n"
   "Error: no value for stop\n"
   "(ladebug) "
-> "print np1"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"np1\" is not defined.\n"
   "Error: no value for np1\n"
   "(ladebug) "
-> "print if"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "print if\n"
   "       ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "print do"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"do\" is not defined.\n"
   "Error: no value for do\n"
   "(ladebug) "
-> "print string"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"string\" is not defined.\n"
   "Error: no value for string\n"
   "(ladebug) "
-> "print Call"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"Call\" is not defined.\n"
   "Error: no value for Call\n"
   "(ladebug) "
-> "print log_file"
n"
   "Symbol \"log_file\" is not defined.\n"
   "Error: no value for log_file\n"
   "(ladebug) "
-> "cont"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "  *                 version 4.3.0                *"
<- "[2] stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
#  Display 2: page_len (enabled, scope     )
#  Display 2: page_len (enabled, scope     )
-> "print if"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "p"
<- "rint if\n"
   "       ^"
<- ""
<- "Unable to parse input as legal command or Fortran expression."
<- "(ladebug) "
-> "print stop"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "Symbol \""
<- "stop\" is not defined.\n"
   "Error: no value for stop"
<- "(ladebug) "
-> "list if"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "list if\n"
   "      ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "stop in if"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "stop in if\n"
   "         ^\n"
   "Unable to parse input as legal command or Fortran expression.\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "file vce.f90"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }\n"
   "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }\n"
   "(ladebug) "
-> "stop at 157"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "[#4: stop at \"fpp/vce.f90\":157 ]"
<- "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "(ladebug) "
-> "print log_file"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"log_file\" is not defined.\n"
   "Error: no value for log_file\n"
   "(ladebug) "
-> "print bin_file"
n"
   "Symbol \"bin_file\" is not defined.\n"
   "Error: no value for bin_file\n"
   "(ladebug) "
-> "print then"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"then\" is not defined.\n"
   "Error: no value for then\n"
   "(ladebug) "
-> "print end"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"end\" is not defined.\n"
   "Error: no value for end\n"
   "(ladebug) "
-> "file vce.f90"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }\n"
   "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }\n"
   "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }\n"
   "(ladebug) "
-> "stop at 172"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "[#5: stop at \"fpp/vce.f90\":172 ]\n"
   "(ladebug) "
-> "status"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }\n"
   "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print Call"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\n"
   "Symbol \"Call\" is not defined.\n"
   "Error: no value for Call\n"
   "(ladebug) "
-> "cont"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "  *            14-Feb-2000 @ 11:24:05            *"
<- "[2] stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "cont"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "  *              Linux 2.2.14 alpha              *"
<- "[2] stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "print Select"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "Symbol \""
<- "Select\" is not defined.\n"
   "Error: no value for Select"
<- "(ladebug) "
-> "print do"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "Symbol \""
<- "do\" is not defined.\n"
   "Error: no value for do"
<- "(ladebug) "
-> "print end"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\n"
   "Symbol \"end\" is not defined.\n"
   "Error: no value for end\n"
   "(ladebug) "
-> "print bin_file"
n"
   "Symbol \"bin_file\" is not defined.\n"
   "Error: no value for bin_file\n"
   "(ladebug) "
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():148 0x12007e954]\t"
<- "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "  *                  written by                  *"
<- "stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment\n"
   "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():148 0x12007e954]\t"
<- "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "fpp/vce.f90"
<- ""
<- "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "  *              Eildert Groeneveld              *"
<- "stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C"
<- "\033[D\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J"
<- " \033[C\033[D\033[J \033[C\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- ""
<- "stopped at [subroutine vce():148 0x12007e954]\t"
<- "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- ""
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "  *                 eg@tzv.fal.de                *"
<- "stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C"
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():148 0x12007e954]\t"
<- "    148         print *,trim(comment(i))\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C\033[D\033[J"
<- " \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "  ************************************************"
<- "stopped at [subroutine vce():147 0x12007ea84]\t"
<- "    147      do i  =  1, 9\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment\n"
   "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- "stopped at [subroutine vce():150 0x12007eaac]\t"
<- "    150      Print *,\'VCE [--kw] pfile\'\n"
   "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J "
<- "\033[C"
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
<- " VCE [--kw] pfile"
<- "stopped at [subroutine vce():151 0x12007eaf0]\t"
<- "    151      Read (*,*) pfile"
<- "(ladebug) "
-> "file"
<- "file"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- ""
<- "fpp/vce.f90"
<- "\n"
   "(ladebug) "
-> "status"
<- "status"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- ""
<- "#1 PC==0x12007e680 in subroutine vce() \"fpp/vce.f90\":131 { break }"
<- "#2 ( PC==0x12007ea84 in subroutine vce() \"fpp/vce.f90\":147 or PC==0x12007e940 in subroutine vce() \"fpp/vce.f90\":147 ) { break }"
<- "#3 ( PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#4 ( PC==0x12007eb58 in subroutine vce() \"fpp/vce.f90\":157 or ( PC==0x12007eb70 in subroutine vce() \"fpp/vce.f90\":157 or PC==0x12007eb7c in subroutine vce() \"fpp/vce.f90\":157 ) ) { break }"
<- "#5 PC==0x12007ee5c in subroutine vce() \"fpp/vce.f90\":172 { break }"
<- "(ladebug) "
-> "print page_len"
<- "print page_len"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J \033[C"
<- "\033[D\033[J"
<- " \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D"
<- "\033[J \033[C\033[C\033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C"
<- "65"
<- "(ladebug) "
-> "print comment"
<- "print comment"
<- "\033[J"
<- " \033[C"
<- "\033[D\033[J "
<- "\033[C\033[D"
<- "\033[J \033[C\033[C\033[C"
<- "\033[D\033[D\033[D\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D\033[J"
<- " \033[C\033[D\033[J "
<- "\033[C\033[C\033[C\033[C\033[C\033[D\033[D\033[D\033[D\033[D"
<- "\033[J \033[C"
<- "\033[D\033[J \033[C\033[C\033[C\033[C\033[C"
<- ""
<- "Symbol \""
<- "comment\" is not defined.\n"
   "Error: no value for comment"
<- "(ladebug) "
#  Updating displays...
#  Updating displays...done.
-> "next"
<- "\033[J \033[C\033[D\033[J \033[C\033[D\033[J \033[C\033[C\033[C\033[D\033[D\033[D\033[J \033[C"
#  Running Ladebug (pid 23323, tty /dev/pts/3)...Exit 0.
