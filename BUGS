# $Id$ -*- Text -*-
# The DDD bug list.

Note: For problems occurring when *building* DDD, see the file `PROBLEMS'.

This is a list of known DDD bugs, which should be fixed in some future
DDD release.  If you want to fix one or more of these bugs, please ask
us (at ddd@ips.cs.tu-bs.de) whether there are already people working
on that bug.  Similar, if you find a bug, be sure to report it to us
(at ddd-bugs@ips.cs.tu-bs.de) such that we may fix it (or include it
in this list :-)

Bugs marked with an `*' represent work in progress.
Volunteers for fixing these and other bugs are welcome!

001. It's too big and too slow.  [This one will never get fixed]

003. Using Motif 1.1 or earlier, the command window is scrolled
     whenever obscured.  [This seems to be a Motif bug.]

010. On some systems, switching back from running processes in the
     execution window to running processes in the command window does
     not work correctly; processes attempting to read from stdio are
     interrupted with SIGTTIN.  [This is due to the `tty' command in
     GDB, which on some systems messes up tty control when applied to
     the command window pty.  As a workaround, enter a line
     `*useTTYCommand: false' in `~/.dddinit': this will set up an
     alternative redirection scheme].

013. Raising windows using the `Windows' menu does not assign them `mwm'
     input focus.  [Anyone willing to give me a hint here?  -AZ]

015. On Motif 1.2 or later, using DDD with both explicit keyboard
     focus and a panned graph editor causes problems: Keyboard
     traversal of the graph editor does not work; on
     mips-dec-ultrix4.4 (and others?), pointer selection of an
     arbitrary display causes DDD to crash.  [It seems that it is
     generally not wise to combine explicit keyboard focus and panned
     data displays, since this means involving Athena widgets in Motif
     keyboard traversal.  A simple workaround: If you want panners,
     don't use explicit keyboard focus; if you want explicit keyboard
     focus, use scrollbars.]

021. Using DBX, attempting to dereference a `(nil)' pointer results in
     an error message and no new display.  However, the expression is
     entered as an ordinary display.

026. Using DBX with PASCAL or Modula-2, selected array elements are
     always counted from zero, instead of the starting index of the array.

037. Paul Eggert (eggert@twinsun.com) states:

     The first time I ran ddd, my X server dumped core!  Ack!

     Here are the details.  I was running on `shade', a SunOS 4.1.4
     sparc, using the old X News server.  ddd was running on a Solaris
     2.4 host, with the DISPLAY='shade:0'.

     I managed to narrow it down to the following.  Use the .Xdefaults
     at the end of this message.  This should be the only file in your
     home directory.  Log in to a SunOS 4.1.x (x = 3 or 4) host ONE.
     Type `/usr/openwin/bin/openwin' to start up Open Windows.  Click
     in the command tool, and type `rlogin TWO' where TWO is a Solaris
     2.4 host.  Then type `setenv DISPLAY ONE:0' (where ONE is the
     SunOS 4.1.x host).  Then run `ddd'.  This will make the SunOS
     4.1.x X server dump core.

040. dmitzel@everest.hitc.com (Danny J. Mitzel) states:
     I'm running the DDD 1.1 sparc-sun-sunos4.1.1 prebuilt binary on a
     Sun4/300 SunOS4.1.3_U1.  I notice that once I have typed any
     commands in the 'DDD Command Window' and then bring up the
     'Command History' list that there is always an extra entry at the
     bottom of the list, usually it's blank sometimes there's garbage.
     anyways, selecting that entry leads to 'Internal error
     (Segmentation fault).'  no core dump.  I've attached the
     '--configuration' and '--check-configuration' report.  let me
     know if you need any other info.
     [A bug in Motif 1.1 - does not occur in later Motif versions].

041. Starting DDD iconified under vtwm causes trouble with group
     iconification.

043. vickery@babbage.cs.qc.edu (Christopher Vickery) states:
     The display() operation generates a segmentation fault if the variable
     to be displayed is an uninitialized pointer.

046. Line continuations (i.e. GDB commands ended by `\' and continued
     on the next line) are not handled.

049. The bounding box is computed for all boxes, even if only selected
     boxes are to be printed.

050. jcrupi@mystech.com (John Crupi) states: 
     When trying to dereference (using the mouse) a very large
     structure, ddd locks up.  It usually happens if I quickly select
     'dereference' after I display the pointer.  The structure contains
     unions.  Machine is sparc-sun-solaris2.4.

051. grant@isgtec.com (Grant McDorman) has run purify on DDD and
     reported some memory leaks as well as bad memory accesses.

053. emeijer@us.oracle.com (Edwin Meijer) states:
     I tried the following scenario: 
     > exec program [arg,....] 
     and while my program was in a sleep I did:  
     > ddd --dbx program process-id 
     ddd seemed to start up fine, but after loading it core-dumped. 

056. `Select All' does not select hints.

059. Having a newline ``stuck'' in the command line makes DDD execute
     each typed letter as a separate command.

060. Frank Dohrmann <frank@kaa.desy.de> says that on his Sun-Sparc
     10/41 with SunOs 4.1.3, using `lpr' instead of `lp -c' to print
     the graph hangs up DDD.

061. Michael Schmitz <mc@col.sw-ley.de> states that using DDD V1.3a on
     a HP9000/856 running HP/UX 9.0.4 sometimes crashes the system.
     The problem does occur only if you use the data window.

062. Seth J. Bradley <sbradley@scic.intel.com> says that DDD only
     displays the upper 32 bits of "unsigned long long" data.
     Xxgdb, mxgdb and xde all display the full 64 bits of this data
     type.

064. After changing the source code, the current execution glyph is
     not cleared.

067. On Solaris 2.x, when attaching with DBX to a running process, 
     ddd gets a seg fault.  The command line is, for example:
     ddd --dbx $PAR_HOME/bin/tesla-wish 20919
     Reported by Joe Hildebrand <hildjj@fuentez.com>

068. (Insert your bug here)
