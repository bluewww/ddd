# $Id$ -*- Text -*-
# The DDD bug list.

Note: For problems occurring when *building* DDD, see the file `PROBLEMS'.

This is a list of known DDD bugs, which should be fixed in some future
DDD release.  If you want to fix one or more of these bugs, please ask
us (at ddd@ips.cs.tu-bs.de) whether there are already people working
on that bug.  Similar, if you find a bug, be sure to report it to us
(at ddd-bugs@ips.cs.tu-bs.de) such that we may fix it (or include it
in this list :-)

Bugs marked with an `*' represent work in progress.
Volunteers for fixing these and other bugs are welcome!

001. It's too big and too slow.  [This one will never get fixed]

003. Using Motif 1.1 or earlier, the command window is scrolled
     whenever obscured.  [This seems to be a Motif bug.]

013. Raising windows using the `Windows' menu does not assign them `mwm'
     input focus.  [Anyone willing to give me a hint here?  -AZ]

015. On Motif 1.2 or later, using DDD with both explicit keyboard
     focus and a panned graph editor causes problems: Keyboard
     traversal of the graph editor does not work; on
     mips-dec-ultrix4.4 (and others?), pointer selection of an
     arbitrary display causes DDD to crash.  [It seems that it is
     generally not wise to combine explicit keyboard focus and panned
     data displays, since this means involving Athena widgets in Motif
     keyboard traversal.  A simple workaround: If you want panners,
     don't use explicit keyboard focus; if you want explicit keyboard
     focus, use scrollbars.]

021. Using DBX, attempting to dereference a `(nil)' pointer results in
     an error message and no new display.  However, the expression is
     entered as an ordinary display.

026. Using DBX with PASCAL or Modula-2, selected array elements are
     always counted from zero, instead of the starting index of the array.

037. Paul Eggert (eggert@twinsun.com) states:

     The first time I ran ddd, my X server dumped core!  Ack!

     Here are the details.  I was running on `shade', a SunOS 4.1.4
     sparc, using the old X News server.  ddd was running on a Solaris
     2.4 host, with the DISPLAY='shade:0'.

     I managed to narrow it down to the following.  Use the .Xdefaults
     at the end of this message.  This should be the only file in your
     home directory.  Log in to a SunOS 4.1.x (x = 3 or 4) host ONE.
     Type `/usr/openwin/bin/openwin' to start up Open Windows.  Click
     in the command tool, and type `rlogin TWO' where TWO is a Solaris
     2.4 host.  Then type `setenv DISPLAY ONE:0' (where ONE is the
     SunOS 4.1.x host).  Then run `ddd'.  This will make the SunOS
     4.1.x X server dump core.

040. dmitzel@everest.hitc.com (Danny J. Mitzel) states:
     I'm running the DDD 1.1 sparc-sun-sunos4.1.1 prebuilt binary on a
     Sun4/300 SunOS4.1.3_U1.  I notice that once I have typed any
     commands in the 'DDD Command Window' and then bring up the
     'Command History' list that there is always an extra entry at the
     bottom of the list, usually it's blank sometimes there's garbage.
     anyways, selecting that entry leads to 'Internal error
     (Segmentation fault).'  no core dump.  I've attached the
     '--configuration' and '--check-configuration' report.  let me
     know if you need any other info.
     [A bug in Motif 1.1 - does not occur in later Motif versions].

041. Starting a multi-window DDD iconified under vtwm and fvwm causes
     trouble with group iconification.

043. vickery@babbage.cs.qc.edu (Christopher Vickery) states:
     The display() operation generates a segmentation fault if the variable
     to be displayed is an uninitialized pointer.

046. Line continuations (i.e. GDB commands ended by `\' and continued
     on the next line) are not handled.

049. The bounding box is computed for all boxes, even if only selected
     boxes are to be printed.

050. jcrupi@mystech.com (John Crupi) states: 
     When trying to dereference (using the mouse) a very large
     structure, ddd locks up.  It usually happens if I quickly select
     'dereference' after I display the pointer.  The structure contains
     unions.  Machine is sparc-sun-solaris2.4.

051. grant@isgtec.com (Grant McDorman) has run purify on DDD and
     reported some memory leaks as well as bad memory accesses.

056. `Select All' does not select hints.

060. Frank Dohrmann <frank@kaa.desy.de> says that on his Sun-Sparc
     10/41 with SunOs 4.1.3, using `lpr' instead of `lp -c' to print
     the graph hangs up DDD.

062. Seth J. Bradley <sbradley@scic.intel.com> says that DDD only
     displays the upper 32 bits of "unsigned long long" data.
     Xxgdb, mxgdb and xde all display the full 64 bits of this data
     type.

067. On Solaris 2.x, when attaching with DBX to a running process, 
     ddd gets a seg fault.  The command line is, for example:
     ddd --dbx $PAR_HOME/bin/tesla-wish 20919
     Reported by Joe Hildebrand <hildjj@fuentez.com>

069. Yves Arrouye <Yves.Arrouye@marin.fdn.fr> states:
     [Linux 1.3.38 system, X11R6 (XFree 3.1.1), Motif 2.x]

     2. The graph window behaves strangely when all logical windows are in
        a logical one: the scroller disappear sometimes and if the window
        is extended gray appears, not the graph window dotted background.
        The graph window comes right after a display, though the scrollbar
        is not appearing.

        [I could not reproduce this bug.  Does this also happen on 
         other configurations?  -AZ]

     3. ddd seg. faults when receiving a signal during startup (such as
        when someone hits C-C). It also truncates the .dddinit file to
        zero bytes :-(.

        [I could not reproduce this bug.  Does this also happen on 
         other configurations?  -AZ]

071. Klaus-Georg Adams <adams@achibm5.chemie.uni-karlsruhe.de> says:
     I have got a seg-fault in the stock precompiled ddd-1.4b
     (i486-unknown-linux) and report it dutyfully.
     It can be reproduced by doing the following:
     Run your program to a breakpoint.  Select data to display() in
     the data window.  Dereference() a pointer.  Step out of the
     function or kill the program, so that displayed data is disabled.
     Do a `select all' in the data menu.  Hit delete(). That's it.
     (sometimes it takes another klick on run to get the seg-fault).
     [I could not reproduce this bug.  Does this also happen on 
      other configurations?  -AZ]

076. Jauder Ho <jauderho@umich.edu> says:
     DDD 1.4b (i586-unknown-linux) gets fatal signal
     When I run my program after setting a breakpoint and allowing ddd
     to stop at the breakpoint. If at that point I choose to run the
     program again, the program either runs by starting the program at
     the beginning OR it complains of "Internal error (IOT
     trap/Abort)" and ddd exits...  this does not result in an error
     under just gdb so I am assuming that it is an error in ddd.

077. oyvind@stavanger.Geco-Prakla.slb.com (Oyvind Yrke) says that DDD
     crashes after receiving too much data from GDB (e.g. `info
     functions').

079. Window resize problems.  louie@dbmx.com (Lewis Alderton) says: I
     am running using FVWM (virtual window manager) and when the
     breakpoints and stack-frame windows pop up, they appear as the
     width of the virtual screen, which is twice as wide as the actual
     screen.

     With the stackframe window I can resize the frame and it is OK,
     but with the breakpoints window, resize causes the window to
     redraw is such a manner as to hide all the breakpoints, once this
     has happened, I can never see breakpoints in this window again.

084. Configure problems.  Lutz Vieweg <vieweg@iap.uni-frankfurt.de>
     says that the `configure' tests ignore the `CC' and `CXX'
     environment variables.
     [Is this true for the top-level `configure', or for
     `ddd/configure'? -AZ]

085. DDD cannot handle `members of T:' GDB output in displays.
     The following is not processed correctly:

     -> "display p\n"
     <- "1: p = {\n"
        "  <bidirectional_iterator<pair<Symbol *const,ProcInfo>,int>> = {\n"
        "  }, \n"
        "  members of iterator: \n"
        "  node = 0xf5300\n"
        "}\n"
        "(gdb) "

     Reported by Jens Krinke <krinke@ips.cs.tu-bs.de>.

086. Lassi A. Tuura <Lassi.Tuura@cern.ch> states:

     - configure does not handle CXXFLAGS correctly -- it wanted to
       determine the options itself anyway.  I had to go and modify
       the makefiles by hand later on (not a big deal).

     - configure did not respect CC settings for -liberty.  Sligthly
       worse than the previous.  I had to modify the settings again
       by hand (is the problem that libiberty/Makefile.in does not
       have an entry for CC= @CC@?)

     - There is a bug somewhere in graph layout code that manifests
       only on highest KCC optimization levels (+K2 and +K3).  The
       result is that if I dereference any pointer, the following
       happens:
         - the arrow is drawn to extreme left, beyond the left edge
         - the panner window becomes very wide and the current view
           is just a thin line in the panner
         - moving the panner handle has no effect -- no scrolling is
           ever done; thus I cannot make the target of the pointer
           visible
       This is very repeatable, as it happens every time.  DDD does
       not crash, however.  My first guess is that somehow something
       goes either negative or to extremely large positive value.  I
       could try to narrow down the location of the bug if someone
       would be nice enough to tell me which functions to look at.

085. mayer@paradigml.com (Ron Mayer) says:

     In a number of structures I would attempt to "Modify [the]
     dependent display expression" to display in hex using expressions
     like "/x g->head", instead of the default "(g)->head".

     Occasionally this would make ddd hang, and lock up the X-server
     completely so that I would have to rlogin from another terminal
     to kill the program.  The bus-error was not reproducable, and
     unfortunatelly I had core files disabled when it happened.

     These structures did happen to be in a mmap()'d region of shared
     memory, but since I didn't see the problems when I didn't use the
     "/x" modifier I suspect this isn't the problem.

     PS: What is the prefered way (if any) of making the hex output 
         the default in the display graph?  If I "set output-radix 16" 
         in the gdb window ddd seems to lock up very often.

099. With DEC DBX, a display once disabled is never enabled again.

100. Self-modifying code is not detected automatically; users must
     explicitly re-disassemble (with caching disabled).  
     [Does anyone care?  -AZ]

107. Jonathan Edwards <edwards@blight.IntraNet.com> says that DDD/DBX
     hangs up on his powerpc-ibm-aix4.2.0.0 box after a few `step's.
     Besides that, the source window does not respond to movement in
     the backtrace window.
     [I could not reproduce this bug.  Does this also happen on 
      other configurations?  -AZ]

108. (Insert your bug here)
